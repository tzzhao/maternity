{"version":3,"sources":["interfaces/breastFeed.interfaces.ts","utils/date.utils.ts","utils/db.utils.ts","features/breastFeed/breastFeedSlice.ts","components/breastFeed/BreastFeedModal.tsx","features/diaper/diaperSlice.ts","features/babyBottle/babyBottleSlice.ts","interfaces/diaper.interfaces.ts","components/diaper/DiaperModal.tsx","components/babyBottle/BabyBottleModal.tsx","components/manual/ManualModal.tsx","components/activityTable/activityTable.tsx","components/data/ImportModal.tsx","components/summaryChart/SummaryChart.tsx","components/data/ExportModal.tsx","utils/download.utils.ts","components/diaper/DiaperActivity.tsx","components/breastFeed/BreastFeedActivity.tsx","interfaces/babyBottle.interface.ts","App.tsx","app/store.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["RIGHT","LEFT","formatDate","date","withTime","d","Date","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","length","dayString","join","formatDuration","duration","Math","floor","timeToString","time","formattedTime","toString","MONTHS","getInputFormattedTime","timeInSeconds","useTime","defaultTime","db","BreastFeedStatus","ObjectStore","BREAST_FEED","DIAPERS","BABY_BOTTLE","a","openDB","upgrade","database","oldVersion","newVersion","transaction","createObjectStore","keyPath","data","put","Promise","all","Object","values","map","store","done","key","delete","getAllBreastFeedData","getAll","getAllBabyBottleData","getAllDiapersData","initialState","status","IDLE","lastStart","undefined","updateStorage","putBreastFeedData","breastFeedSlice","createSlice","name","reducers","startRightBreastFeeding","state","FEEDING_R","round","now","startLeftBreastFeeding","FEEDING_L","stopBreastFeeding","action","previousStatus","start","payload","breastFeedData","type","loadData","addBreastFeedData","removeBreastFeedData","deleteBreastFeedData","importBreastFeedData","putManyBreastFeedData","breastFeedActions","actions","breastFeedReducer","reducer","BreastFeedModalBase","props","getDuration","getNowTime","startTime","realMinutes","realSeconds","hoursString","getFormattedTime","minutesString","secondsString","openModal","clearInterval","timeout","setInterval","forceUpdate","setState","open","refreshInterval","saveData","closeModal","event","reason","num","this","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogActions","autoFocus","Component","mapDispatch","BreastFeedModal","connect","connector","putDiapersData","BabyBottleStatus","diaperSlice","logPeeDiaper","diaperData","logStollDiaper","addDiaperData","removeDiaperData","deleteDiapersData","importDiaperData","putManyDiaperData","DiaperActions","diaperReducer","DiaperModalBase","logPee","logStool","DiaperModal","putBabyBottleData","babyBottleSlice","startBabyBottle","FEEDING","stopBabyBottle","babyBottleData","quantity","addBabyBottleData","removeBabyBottleData","deleteBabyBottleData","importBabyBottleData","putManyBabyBottleData","babyBottleActions","babyBottleReducer","LOCAL_STORAGE_KEY","BabyBottleModalBase","handleChange","evt","Number","target","value","NaN","localStorage","setItem","saveQuantity","getItem","FormControl","Input","onChange","endAdornment","InputAdornment","position","FormHelperText","BabyBottleModal","ManualModalMode","ManualModalBase","quantityRef","createRef","startTimeRef","endTimeRef","getDefaultValues","defaultDate","startDefault","endDefault","quantityDefault","mode","endTime","current","getTime","isBreast","isBabyBottle","isDiaper","iconButton","IconButton","modalTitle","InputLabel","Select","disabled","MenuItem","inputRef","defaultValue","inputProps","step","ManualModal","STORAGE_KEY","TablePagination","ActivityTableBase","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","size","getData","max","min","SelectProps","MenuProps","anchorOrigin","vertical","horizontal","getContentAnchorEl","rowsPerPageOptions","component","count","labelRowsPerPage","labelDisplayedRows","paginationInfo","from","to","onChangePage","onChangeRowsPerPage","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","renderRows","prevProps","prevState","babyBottle","breastFeed","diaper","allData","sort","b","aScore","i","push","slice","renderDiaperRow","renderBabyBottleRow","renderBreastFeedRow","fontSize","PureComponent","ActivityTable","ImportModalBase","textFieldRef","onTypeChange","input","updateState","file","document","getElementById","files","reader","FileReader","readAsText","isImporting","onload","result","updateData","onerror","jsonObject","JSON","parse","e","disableUnderline","id","TextField","placeholder","multiline","ImportModal","Mode","ExportModalBase","download","fileName","dataStr","encodeURIComponent","stringify","dlAnchorElem","setAttribute","click","copyToClipboard","copyText","select","setSelectionRange","execCommand","readOnly","ExportModal","DiaperActivityBase","keys","singleData","dateString","reverse","BreastFeedActivityBase","BABY_BOTTLE_TYPE","Chart","register","registerables","SummaryChartBase","feedContainerRef","diaperContainerRef","feedChart","diaperChart","getBabyBottleData","extractData","getBreastFeedData","getDiapersPeeData","getDiapersStoolData","end","types","getCurrentValue","nbDays","reduce","previousValue","currentValue","includes","labels","startDate","WEEKS","getWeeksThreshold","WEEK","getDayThreshold","getMonthThreshold","realDate","onModeChange","newMode","getDefaultDate","onStartDateChange","nextDate","updateDate","previousDate","operation","factor","today","datasets","yAxisID","label","backgroundColor","options","scales","breastFeedAxis","peeData","stoolData","update","nextMonth","nextYear","updateCharts","style","padding","minWidth","margin","ref","newDate","SummaryChart","babyData","App","useState","MAIN","setMode","className","STATS","display","configureStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","indexedDB","arrayToObject","array","obj","forEach","el","setTimeout","initDb","allDiapersData","dispatch","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.41039a20.chunk.js","sourcesContent":["import { FeedData } from \"./feed.interface\";\n\nexport const RIGHT = 'r';\nexport const LEFT = 'l';\n\nexport type BreastFeedType = typeof RIGHT | typeof LEFT;\n\nexport interface BreastFeedData extends FeedData {\n    type: BreastFeedType\n}","export function formatDate(date: number | string, withTime: boolean = true) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear(),\n        hours = '' + d.getHours(),\n        minutes = '' + d.getMinutes(),\n        seconds = '' + d.getSeconds();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n    if (hours.length < 2) hours = '0' + hours;\n    if (minutes.length < 2) minutes = '0' + minutes;\n    if (seconds.length < 2) seconds = '0' + seconds;\n\n    const dayString = [year, month, day].join('-');\n    return dayString + (withTime ? ` ${hours}:${minutes}:${seconds}` : '');\n}\n\nexport function formatDuration(duration: number) {\n    let seconds = duration;\n    let minutes = Math.floor(seconds / 60);\n    let hours = Math.floor(minutes / 60);\n    seconds -= minutes * 60;\n    minutes -= hours * 60;\n    return `${timeToString(hours)}:${timeToString(minutes)}:${timeToString(seconds)}`\n}\n\nfunction timeToString(time: number) {\n    let formattedTime = time.toString();\n    if (formattedTime.length < 2) formattedTime = '0' + formattedTime;\n    return formattedTime;\n}\n\nexport function getDateFromString(date: string) {\n    const [dateString, timeString] = date.split(' ');\n    const [year, month, day] = dateString.split('-');\n    const [hours, minutes, seconds] = timeString.split(':');\n    return new Date(+year, +month, +day, +hours, +minutes, +seconds);\n}\n\nexport const MONTHS = ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Aout', 'Sept', 'Oct', 'Nov', 'Dec'];\nexport const WEEKDAYS = ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'];\n\nexport function getDaysOfMonth(year: number, month: number) {\n    const nbDays = new Date(year, month, 0).getDate();\n    const dateArray: string[] = [];\n    for (let d = 0; d < nbDays; d++) {\n        dateArray.push((d+1).toString());\n    }\n    return dateArray;\n}\n\nexport function getInputFormattedTime(timeInSeconds: number, useTime: boolean = true) {\n    const date = new Date(timeInSeconds * 1000);\n    let month = (date.getMonth() + 1).toString();\n    if (month.length < 2) {\n        month = '0' + month;\n    }\n    let day = date.getDate().toString();\n    if (day.length < 2) {\n        day = '0' + day;\n    }\n    let hours = date.getHours().toString();\n    if (hours.length < 2) {\n        hours = '0' + hours;\n    }\n    let minutes = date.getMinutes().toString();\n    if (minutes.length < 2) {\n        minutes = '0' + minutes;\n    }\n    let seconds = date.getSeconds().toString();\n    if (seconds.length < 2) {\n        seconds = '0' + seconds;\n    }\n\n    if (!useTime) {\n        return `${date.getFullYear()}-${month}-${day}`;\n    }\n\n    const defaultTime = `${date.getFullYear()}-${month}-${day}T${hours}:${minutes}:${seconds}`;\n    return defaultTime;\n}","import { openDB, deleteDB, IDBPDatabase, IDBPTransaction, StoreNames } from 'idb';\nimport { BreastFeedData, DiaperData } from '../interfaces';\nimport { BabyBottleData } from '../interfaces/babyBottle.interface';\n\nlet db: IDBPDatabase;\n\nexport const ObjectStore = {\n    BREAST_FEED: 'breastFeed',\n    DIAPERS: 'diapers',\n    BABY_BOTTLE: 'babyBottle'\n}\n\nexport async function initDb() {\n    db = await openDB('maternity', 1, {\n        upgrade: (database: IDBPDatabase, oldVersion: number, newVersion: number | null, transaction: IDBPTransaction<any, StoreNames<any>[], 'versionchange'>) => {\n            database.createObjectStore(ObjectStore.BREAST_FEED, {keyPath: 'start'});\n            database.createObjectStore(ObjectStore.DIAPERS, {keyPath: 'time'});\n            database.createObjectStore(ObjectStore.BABY_BOTTLE, {keyPath: 'start'});\n        }\n    });\n    return db;\n}\n\nexport async function putBreastFeedData(data: BreastFeedData) {\n    db.put(ObjectStore.BREAST_FEED, data);\n}\n\nexport async function putDiapersData(data: DiaperData) {\n    db.put(ObjectStore.DIAPERS, data);\n}\n\nexport async function putBabyBottleData(data: BabyBottleData) {\n    db.put(ObjectStore.BABY_BOTTLE, data);\n}\n\nexport async function putManyBabyBottleData(data: {[key:number] :BabyBottleData}) {\n    const transaction = db.transaction(ObjectStore.BABY_BOTTLE, 'readwrite');\n\n    return await Promise.all([...Object.values(data).map((d) => {\n        return transaction.store.put(d);\n    }), transaction.done] as Promise<any>[]);\n}\n\nexport async function putManyDiaperData(data:  {[key:number] :DiaperData}) {\n    const transaction = db.transaction(ObjectStore.DIAPERS, 'readwrite');\n\n    return await Promise.all([...Object.values(data).map((d) => {\n        return transaction.store.put(d);\n    }), transaction.done] as Promise<any>[]);\n}\n\nexport async function putManyBreastFeedData(data:  {[key:number] :BreastFeedData}) {\n    const transaction = db.transaction(ObjectStore.BREAST_FEED, 'readwrite');\n\n    return await Promise.all([...Object.values(data).map((d) => {\n        return transaction.store.put(d);\n    }), transaction.done] as Promise<any>[]);\n}\n\n\nexport async function deleteBreastFeedData(key: number) {\n    db.delete(ObjectStore.BREAST_FEED, key);\n}\n\nexport async function deleteDiapersData(key: number) {\n    db.delete(ObjectStore.DIAPERS, key);\n}\n\nexport async function deleteBabyBottleData(key: number) {\n    db.delete(ObjectStore.BABY_BOTTLE, key);\n}\n\nexport async function getAllBreastFeedData(): Promise<BreastFeedData[]> {\n    return db.getAll(ObjectStore.BREAST_FEED);\n}\n\nexport async function getAllBabyBottleData(): Promise<BabyBottleData[]> {\n    return db.getAll(ObjectStore.BABY_BOTTLE);\n}\n\nexport async function getAllDiapersData(): Promise<DiaperData[]> {\n    return db.getAll(ObjectStore.DIAPERS)\n}\n\nexport async function resetData() {\n    Object.values(ObjectStore).forEach((storeKey: string) => {\n        resetObjectStore(storeKey);\n    });\n}\n\nexport async function resetObjectStore(storeKey: string) {\n    db.deleteObjectStore(storeKey);\n    db.createObjectStore(storeKey);\n}","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {BreastFeedData, BreastFeedType, LEFT, RIGHT} from '../../interfaces/breastFeed.interfaces';\nimport { deleteBreastFeedData, putBreastFeedData, putManyBreastFeedData } from '../../utils';\n\nexport enum BreastFeedStatus {\n  IDLE, FEEDING_R, FEEDING_L\n}\n\nexport interface BreastFeedState {\n  data: {[start: number]: BreastFeedData};\n  status: BreastFeedStatus;\n  lastStart: number | undefined;\n}\n\nconst initialState: BreastFeedState = {\n  data: {},\n  status: BreastFeedStatus.IDLE,\n  lastStart: undefined\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\n// export const incrementAsync = createAsyncThunk(\n//   'counter/fetchCount',\n//   async (amount: number) => {\n//     const response = await fetchCount(amount);\n//     // The value we return becomes the `fulfilled` action payload\n//     return response.data;\n//   }\n// );\n\nfunction updateStorage(data: BreastFeedData) {\n  putBreastFeedData(data);\n}\n\nexport const breastFeedSlice = createSlice({\n  name: 'breastFeed',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    startRightBreastFeeding: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.status = BreastFeedStatus.FEEDING_R;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    startLeftBreastFeeding: (state) => {\n      state.status = BreastFeedStatus.FEEDING_L;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    stopBreastFeeding: (state, action: PayloadAction<number | undefined>) => {\n      const previousStatus = state.status;\n      const start = state.lastStart;\n      if (start !== undefined && previousStatus !== BreastFeedStatus.IDLE && action.payload !== undefined) {\n        const duration = action.payload;\n        const breastFeedData: BreastFeedData = {\n          start,\n          duration,\n          type: previousStatus === BreastFeedStatus.FEEDING_R ? RIGHT : LEFT\n        };\n        state.data = {...state.data, [start]: breastFeedData};\n        updateStorage(breastFeedData);\n      }\n\n      state.status = BreastFeedStatus.IDLE;\n      state.lastStart = undefined;\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: BreastFeedData}>) => {\n      state.data = action.payload;\n    },\n    addBreastFeedData: (state, action: PayloadAction<BreastFeedData>) => {\n      state.data = {...state.data, [action.payload.start]: action.payload};\n      updateStorage(action.payload);\n    },\n    removeBreastFeedData: (state, action: PayloadAction<number>) => {\n      delete state.data[action.payload];\n      deleteBreastFeedData(action.payload);\n    },\n    importBreastFeedData: (state, action: PayloadAction<{[start: number]: BreastFeedData}>) => {\n      state.data = {...state.data, ...action.payload};\n      putManyBreastFeedData(action.payload);\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    // incrementByAmount: (state, action: PayloadAction<number>) => {\n    //   state.value += action.payload;\n    // },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(incrementAsync.pending, (state) => {\n  //       state.status = 'loading';\n  //     })\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\n  //       state.status = 'idle';\n  //       state.value += action.payload;\n  //     });\n  // },\n});\n\nexport const breastFeedActions = breastFeedSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n// export const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount: number): AppThunk => (\n//   dispatch,\n//   getState\n// ) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport const breastFeedReducer = breastFeedSlice.reducer;\n","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { breastFeedActions } from \"../../features/breastFeed/breastFeedSlice\";\nimport { BreastFeedType, RIGHT } from \"../../interfaces/breastFeed.interfaces\";\n\ninterface Props extends PropsFromRedux {\n    type: BreastFeedType\n}\n\ninterface State {\n    startTime: number;\n    open: boolean;\n    refreshInterval: any;\n}\n\nclass BreastFeedModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, startTime: 0, refreshInterval: undefined};\n    }\n\n    public render() {\n        const type = this.props.type === RIGHT ? 'droit' : 'gauche';\n        return <>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.openModal}>\n            Sein {type}\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Sein {type}\n            </DialogTitle>\n            <DialogContent>\n                {this.getDuration()}\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                Fini!\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private getDuration = () => {\n        const duration = this.getNowTime() - this.state.startTime;\n        const minutes =  Math.floor(duration / 60);\n        const hours = Math.floor(minutes / 60);\n\n        const realMinutes = minutes - hours * 60;\n        const realSeconds = duration - minutes * 60;\n        \n        const hoursString = this.getFormattedTime(hours);\n        const minutesString = this.getFormattedTime(realMinutes);\n        const secondsString = this.getFormattedTime(realSeconds);\n        return `${hoursString}:${minutesString}:${secondsString}`;\n    }\n\n    private openModal = () => {\n        this.clearInterval();\n        const timeout = setInterval(() => {\n            this.forceUpdate();\n        }, 1000);\n        this.setState({open: true, startTime: this.getNowTime(), refreshInterval: timeout});\n        if (this.props.type === RIGHT) {\n            this.props.startRightBreastFeeding();\n        } else {\n            this.props.startLeftBreastFeeding();\n        }\n    }\n\n    private clearInterval = () => {\n        if (this.state.refreshInterval !== undefined) {\n            clearInterval(this.state.refreshInterval);\n        }\n    }\n\n    private saveData = () => {\n        this.clearInterval();\n        const now = this.getNowTime();\n        this.props.stopBreastFeeding(now - this.state.startTime);\n        this.setState({open: false, refreshInterval: undefined});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        if (reason && reason === 'backdropClick') {\n            return;\n        }\n        this.clearInterval();\n        this.setState({open: false, refreshInterval: undefined});\n        this.props.stopBreastFeeding(undefined);\n    }\n\n    private getNowTime = () => {\n        return Math.round(Date.now() / 1000);\n    }\n\n    private getFormattedTime = (num: number) => {\n        return num < 10 ? `0${num}` : num;\n    }\n}\n\nconst mapDispatch = breastFeedActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const BreastFeedModal = connector(BreastFeedModalBase);","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {DiaperData, PEE, STOOL} from '../../interfaces/diaper.interfaces';\nimport { deleteDiapersData, putDiapersData, putManyDiaperData } from '../../utils';\n\nexport interface DiaperState {\n  data: {[start: number]: DiaperData};\n}\n\nconst initialState: DiaperState = {\n  data: {},\n};\n\nfunction updateStorage(data: DiaperData) {\n  putDiapersData(data);\n}\n\nexport const diaperSlice = createSlice({\n  name: 'Diaper',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    logPeeDiaper: (state) => {\n      const time = Math.round(Date.now() / 1000);\n      const diaperData: DiaperData = {time, type: PEE};\n      state.data = {...state.data, [time]: diaperData};\n      updateStorage(diaperData);\n    },\n    logStollDiaper: (state) => {\n        const time = Math.round(Date.now() / 1000);\n        const diaperData: DiaperData = {time, type: STOOL};\n        state.data = {...state.data, [time]: diaperData};\n        updateStorage(diaperData);\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: DiaperData}>) => {\n      state.data = action.payload;\n    },\n    addDiaperData: (state, action: PayloadAction<DiaperData>) => {\n      state.data = {...state.data, [action.payload.time]: action.payload};\n      updateStorage(action.payload);\n    },\n    removeDiaperData: (state, action: PayloadAction<number>) => {\n      delete state.data[action.payload];\n      deleteDiapersData(action.payload);\n    },\n    importDiaperData: (state, action: PayloadAction<{[start: number]: DiaperData}>) => {\n      state.data = {...state.data, ...action.payload};\n      putManyDiaperData(action.payload);\n    },\n  },\n});\n\nexport const DiaperActions = diaperSlice.actions;\n\nexport const diaperReducer = diaperSlice.reducer;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {BabyBottleData} from '../../interfaces/babyBottle.interface';\nimport { deleteBabyBottleData, putBabyBottleData, putManyBabyBottleData } from '../../utils';\n\nexport enum BabyBottleStatus {\n  IDLE, FEEDING\n}\n\nexport interface BabyBottleState {\n  data: {[start: number]: BabyBottleData};\n  status: BabyBottleStatus;\n  lastStart: number | undefined;\n}\n\nconst initialState: BabyBottleState = {\n  data: {},\n  status: BabyBottleStatus.IDLE,\n  lastStart: undefined\n};\n\nfunction updateStorage(data: BabyBottleData) {\n  putBabyBottleData(data);\n}\n\nexport const babyBottleSlice = createSlice({\n  name: 'babyBottle',\n  initialState,\n  reducers: {\n    startBabyBottle: (state) => {\n      state.status = BabyBottleStatus.FEEDING;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    stopBabyBottle: (state, action: PayloadAction<{duration: number, quantity: number} | undefined>) => {\n      const previousStatus = state.status;\n      const start = state.lastStart;\n      if (start !== undefined && previousStatus !== BabyBottleStatus.IDLE && action.payload !== undefined) {\n        const {duration, quantity} = action.payload;\n        const babyBottleData: BabyBottleData = {\n          start,\n          duration,\n          quantity\n        };\n        state.data = {...state.data, [start]: babyBottleData};\n        updateStorage(babyBottleData);\n      }\n\n      state.status = BabyBottleStatus.IDLE;\n      state.lastStart = undefined;\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: BabyBottleData}>) => {\n      state.data = action.payload;\n    },\n    addBabyBottleData: (state, action: PayloadAction<BabyBottleData>) => {\n      state.data = {...state.data, [action.payload.start]: action.payload};\n      updateStorage(action.payload);\n    },\n    removeBabyBottleData: (state, action: PayloadAction<number>) => {\n      delete state.data[action.payload];\n      deleteBabyBottleData(action.payload);\n    },\n    importBabyBottleData: (state, action: PayloadAction<{[start: number]: BabyBottleData}>) => {\n      state.data = {...state.data, ...action.payload};\n      putManyBabyBottleData(action.payload);\n    },\n  },\n});\n\nexport const babyBottleActions = babyBottleSlice.actions;\n\nexport const babyBottleReducer = babyBottleSlice.reducer;\n","export const PEE = 'p';\nexport const STOOL = 's';\n\nexport type DiaperType = typeof PEE | typeof STOOL;\n\nexport interface DiaperData {\n    time: number,\n    type: DiaperType\n}","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { DiaperActions } from \"../../features/diaper/diaperSlice\";\n\ninterface Props extends PropsFromRedux {\n}\n\ninterface State {\n    open: boolean;\n}\n\nclass DiaperModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.openModal}>\n            Couche\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Couche\n            </DialogTitle>\n            <DialogActions>\n            <Button autoFocus onClick={this.logPee} variant=\"contained\" color=\"primary\">\n                Pipi\n            </Button>\n            <Button autoFocus onClick={this.logStool} variant=\"contained\" color=\"primary\">\n                Caca\n            </Button>\n            <Button autoFocus onClick={this.closeModal} variant=\"contained\" color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n\n    private logPee = () => {\n        this.props.logPeeDiaper();\n        this.closeModal();\n    }\n\n    private logStool = () => {\n        this.props.logStollDiaper();\n        this.closeModal();\n    }\n    \n    private closeModal = () => {\n        this.setState({open: false});\n    }\n}\n\nconst mapDispatch = DiaperActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const DiaperModal = connector(DiaperModalBase);","import React, { ChangeEvent, ChangeEventHandler, Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormHelperText, Input, InputAdornment } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { babyBottleActions } from \"../../features/babyBottle/babyBottleSlice\";\n\ninterface Props extends PropsFromRedux {\n}\n\nconst LOCAL_STORAGE_KEY = 'bottleQuantity';\n\nfunction saveQuantity(quantity: number): void {\n    localStorage.setItem(LOCAL_STORAGE_KEY, quantity.toString());\n}\n\nfunction getQuantity(): number {\n    return Number((localStorage.getItem(LOCAL_STORAGE_KEY) || '60'));\n}\n\ninterface State {\n    startTime: number;\n    open: boolean;\n    refreshInterval: any;\n    quantity: number;\n}\n\nclass BabyBottleModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, startTime: 0, refreshInterval: undefined, quantity: getQuantity()};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.openModal}>\n            Biberon\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Biberon\n            </DialogTitle>\n            <DialogContent>\n                <div>{this.getDuration()}</div>\n                <FormControl>\n                    <Input\n                        value={this.state.quantity}\n                        onChange={this.handleChange}\n                        endAdornment={<InputAdornment position=\"end\">mL</InputAdornment>}\n                        type='number'\n                    />\n                    <FormHelperText>Quantité</FormHelperText>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                Fini!\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private handleChange = (evt: ChangeEvent<HTMLInputElement|HTMLTextAreaElement>) => {\n        let quantity = Number(evt.target.value);\n        if (quantity === NaN) {\n            quantity = this.state.quantity;\n        }\n        this.setState({quantity});\n        saveQuantity(quantity);\n    }\n\n    private getDuration = () => {\n        const duration = this.getNowTime() - this.state.startTime;\n        const minutes =  Math.floor(duration / 60);\n        const hours = Math.floor(minutes / 60);\n\n        const realMinutes = minutes - hours * 60;\n        const realSeconds = duration - minutes * 60;\n        \n        const hoursString = this.getFormattedTime(hours);\n        const minutesString = this.getFormattedTime(realMinutes);\n        const secondsString = this.getFormattedTime(realSeconds);\n        return `${hoursString}:${minutesString}:${secondsString}`;\n    }\n\n    private openModal = () => {\n        this.clearInterval();\n        const timeout = setInterval(() => {\n            this.forceUpdate();\n        }, 1000);\n        this.setState({open: true, startTime: this.getNowTime(), refreshInterval: timeout});\n        this.props.startBabyBottle();\n    }\n\n    private clearInterval = () => {\n        if (this.state.refreshInterval !== undefined) {\n            clearInterval(this.state.refreshInterval);\n        }\n    }\n\n    private saveData = () => {\n        this.clearInterval();\n        const now = this.getNowTime();\n        this.props.stopBabyBottle({duration: now - this.state.startTime, quantity: this.state.quantity});\n        this.setState({open: false, refreshInterval: undefined});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        if (reason && reason === 'backdropClick') {\n            return;\n        }\n        this.clearInterval();\n        this.setState({open: false, refreshInterval: undefined});\n        this.props.stopBabyBottle(undefined);\n    }\n\n    private getNowTime = () => {\n        return Math.round(Date.now() / 1000);\n    }\n\n    private getFormattedTime = (num: number) => {\n        return num < 10 ? `0${num}` : num;\n    }\n}\n\nconst mapDispatch = babyBottleActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const BabyBottleModal = connector(BabyBottleModalBase);","import React, { ChangeEvent, ChangeEventHandler, Component, createRef, RefObject } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormHelperText, IconButton, Input, InputAdornment, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { babyBottleActions } from \"../../features/babyBottle/babyBottleSlice\";\nimport { breastFeedActions, DiaperActions } from \"../../features\";\nimport { createFalse } from \"typescript\";\nimport { BreastFeedData, DiaperData, LEFT, PEE, RIGHT, STOOL } from \"../../interfaces\";\nimport { BabyBottleData } from \"../../interfaces/babyBottle.interface\";\nimport { getInputFormattedTime } from \"../../utils\";\n\ninterface Props extends PropsFromRedux {\n    modalTitle: string,\n    mode?: string,\n    data?: BabyBottleData | BreastFeedData | DiaperData,\n    iconButton?: JSX.Element,\n}\n\nconst LOCAL_STORAGE_KEY = 'bottleQuantity';\n\nfunction getQuantity(): number {\n    return Number((localStorage.getItem(LOCAL_STORAGE_KEY) || '60'));\n}\n\nexport const ManualModalMode = {\n    BREAST_L: 'bl',\n    BREAST_R: 'br',\n    BABY_BOTTLE: 'bottle', \n    DIAPER_PEE: 'pee',\n    DIAPER_STOOL: 'stool'\n}\n\ninterface State {\n    mode: string,\n    open: boolean\n}\n\nclass ManualModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {mode: this.props.mode || ManualModalMode.BABY_BOTTLE, open: false};\n    }\n\n    private quantityRef: RefObject<HTMLInputElement> = createRef();\n    private startTimeRef: RefObject<HTMLInputElement> = createRef();\n    private endTimeRef: RefObject<HTMLInputElement> = createRef();\n\n    public render() {\n        const isBreast = this.state.mode === ManualModalMode.BREAST_R || this.state.mode === ManualModalMode.BREAST_L;\n        const isBabyBottle = this.state.mode === ManualModalMode.BABY_BOTTLE;\n        const isDiaper = this.state.mode === ManualModalMode.DIAPER_PEE || this.state.mode === ManualModalMode.DIAPER_STOOL;\n\n\n        const { startDefault, endDefault, quantityDefault } = this.getDefaultValues();\n\n        return <>\n        {this.props.iconButton ? \n        <IconButton onClick={this.openModal}>{this.props.iconButton}</IconButton>\n        :\n        <Button variant='contained' color=\"primary\" onClick={this.openModal}>\n        {this.props.modalTitle}\n    </Button>\n        }\n\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                {this.props.modalTitle}\n            </DialogTitle>\n            <DialogContent>\n            <FormControl>\n                <InputLabel>Type</InputLabel>\n                <Select\n                value={this.props.mode || this.state.mode}\n                onChange={this.handleChange}\n                disabled={!!this.props.mode}\n                >\n                <MenuItem value={ManualModalMode.BREAST_R}>Sein droit</MenuItem>\n                <MenuItem value={ManualModalMode.BREAST_L}>Sein gauche</MenuItem>\n                <MenuItem value={ManualModalMode.BABY_BOTTLE}>Biberon</MenuItem>\n                <MenuItem value={ManualModalMode.DIAPER_PEE}>Couche (Pipi)</MenuItem>\n                <MenuItem value={ManualModalMode.DIAPER_STOOL}>Couche (Caca)</MenuItem>\n                </Select>\n            </FormControl>\n                {isDiaper && <FormControl>\n                    <InputLabel>Moment</InputLabel>\n                    <Input\n                        inputRef={this.startTimeRef}\n                        type='datetime-local'\n                        defaultValue={startDefault}\n                        disabled={!!this.props.mode}\n                        inputProps={{\n                            step: 1,\n                          }}\n                    />\n                </FormControl>}\n                {(isBreast || isBabyBottle) && <><FormControl>\n                    <InputLabel>Début</InputLabel>\n                    <Input\n                        inputRef={this.startTimeRef}\n                        type='datetime-local'\n                        defaultValue={startDefault}\n                        disabled={!!this.props.mode}\n                        inputProps={{\n                            step: 1,\n                          }}\n                    />\n                </FormControl>\n                <FormControl>\n                <InputLabel>Fin</InputLabel>\n                    <Input\n                        inputRef={this.endTimeRef}\n                        type='datetime-local'\n                        defaultValue={endDefault}\n                        inputProps={{\n                            step: 1,\n                          }}\n                    />\n                </FormControl></>}\n                {isBabyBottle && <FormControl>\n                    <InputLabel>Quantité</InputLabel>\n                    <Input\n                        inputRef={this.quantityRef}\n                        defaultValue={quantityDefault}\n                        endAdornment={<InputAdornment position=\"end\">mL</InputAdornment>}\n                        type='number'\n                    />\n                </FormControl>\n                }\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                {this.props.modalTitle}\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private getDefaultValues = () => {\n        let defaultDate = getInputFormattedTime(Math.floor(Date.now() / 1000));\n        let startDefault = defaultDate, endDefault = defaultDate, quantityDefault = getQuantity();\n        if (this.props.mode) {\n            if (this.props.mode === ManualModalMode.BREAST_L || this.props.mode === ManualModalMode.BREAST_R) {\n                const data = this.props.data as BreastFeedData;\n                startDefault = getInputFormattedTime(data.start);\n                endDefault = getInputFormattedTime(data.start + data.duration);\n            } else if (this.props.mode === ManualModalMode.BABY_BOTTLE) {\n                const data = this.props.data as BabyBottleData;\n                startDefault = getInputFormattedTime(data.start);\n                endDefault = getInputFormattedTime(data.start + data.duration);\n                quantityDefault = data.quantity;\n            } else {\n                const data = this.props.data as DiaperData;\n                startDefault = getInputFormattedTime(data.time);\n            }\n        }\n\n        return {\n            startDefault,\n            endDefault,\n            quantityDefault\n        }\n    }\n\n    private handleChange = (evt: ChangeEvent<{ name?: string | undefined; value: unknown; }>) => {\n        let mode = evt.target.value as string;\n        this.setState({mode});\n    }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n\n    private saveData = () => {\n        let startTime: number, endTime: number = 0, quantity: number = 0;\n        startTime = new Date(this.startTimeRef.current!.value).getTime() / 1000;\n        if (this.endTimeRef.current) {\n            endTime = new Date(this.endTimeRef.current.value).getTime() / 1000;\n        }\n        if (this.quantityRef.current) {\n            quantity = Number(this.quantityRef.current.value);\n        }\n\n        switch(this.state.mode) {\n            case ManualModalMode.BABY_BOTTLE: {\n                this.props.addBabyBottleData({\n                    start: startTime,\n                    duration: (endTime - startTime),\n                    quantity: quantity\n                });\n                break;\n            }\n            case ManualModalMode.BREAST_L: {\n                this.props.addBreastFeedData({\n                    start: startTime,\n                    duration: (endTime - startTime),\n                    type: LEFT\n                });\n                break;\n\n            }\n            case ManualModalMode.BREAST_R: {\n                this.props.addBreastFeedData({\n                    start: startTime,\n                    duration: (endTime - startTime),\n                    type: RIGHT\n                });\n                break;\n\n            }\n            case ManualModalMode.DIAPER_PEE: {\n                this.props.addDiaperData({\n                    time: startTime,\n                    type: PEE\n                });\n                break;\n\n            }\n            case ManualModalMode.DIAPER_STOOL: {\n                this.props.addDiaperData({\n                    time: startTime,\n                    type: STOOL\n                });\n                break;\n            }\n        }\n        this.setState({open: false});\n    }\n    \n    private closeModal = () => {\n        this.setState({open: false});\n    }\n}\n\nconst mapDispatch = {...babyBottleActions, ...breastFeedActions, ...DiaperActions};\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ManualModal = connector(ManualModalBase);","import { Button, IconButton, LabelDisplayedRowsArgs, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\nimport { ChangeEvent, PureComponent } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { BreastFeedData, DiaperData, LEFT, PEE } from \"../../interfaces\";\nimport { BabyBottleData } from \"../../interfaces/babyBottle.interface\";\nimport {formatDate, formatDuration} from '../../utils/date.utils';\nimport { ManualModal, ManualModalMode } from \"../manual/ManualModal\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { babyBottleActions, breastFeedActions, DiaperActions } from \"../../features\";\nimport { DataModel } from \"../../interfaces/data.interface\";\n\nconst DEFAULT_PAGE_SIZE: number = 10;\n\nconst TablePaginationAny: any = TablePagination;\n\nconst STORAGE_KEY: string = 'rowPerPage';\n\ninterface ActivityTableProps extends PropsFromRedux {\n\n}\n\ninterface ActivityTableState {\n    page: number,\n    rowsPerPage: number, \n    data: DataModel[][],\n    size: number\n}\n\nclass ActivityTableBase extends PureComponent<ActivityTableProps, ActivityTableState> {\n\n    constructor(props: ActivityTableProps) {\n        super(props);\n        this.state = {\n            page: 0,\n            rowsPerPage: localStorage.getItem(STORAGE_KEY) && Number(localStorage.getItem(STORAGE_KEY)) || DEFAULT_PAGE_SIZE,\n            data: [[]],\n            size: 0\n        }\n    }\n\n    public componentDidMount() {\n        const {data, size} = this.getData();\n        if (data.length > 0) {\n            this.setState({\n                data,\n                page: Math.max(0, Math.min(this.state.page, data.length - 1)),\n                size\n            })\n        }\n    }\n\n    public render() {\n        return <>\n        <TablePagination\n                SelectProps={{\n                    MenuProps:{\n                        anchorOrigin: {\n                        vertical: \"bottom\",\n                        horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                    }\n                }}\n\n                rowsPerPageOptions={[5, 10, 20, 50]}\n                component=\"div\"\n                count={this.state.size}\n                rowsPerPage={this.state.rowsPerPage}\n                page={this.state.page}\n                labelRowsPerPage='Entrées par page'\n                labelDisplayedRows={(paginationInfo: LabelDisplayedRowsArgs) => `${paginationInfo.from}-${paginationInfo.to} sur ${paginationInfo.count}`}\n                onChangePage={this.handleChangePage}\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            />\n        <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Durée</TableCell>\n              <TableCell>Qté</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.renderRows()}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      </>\n    }\n\n    private handleChangePage = (event: any, page: number) => {\n        this.setState({page});\n    }\n\n    private handleChangeRowsPerPage = (event : ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const value = Number(event.target?.value);\n        this.setState({\n            rowsPerPage: value\n        });\n        localStorage.setItem(STORAGE_KEY, value.toString());\n    }\n\n    public componentDidUpdate(prevProps: ActivityTableProps, prevState: ActivityTableState) {\n        if (prevProps.babyBottle !== this.props.babyBottle || prevProps.breastFeed !== this.props.breastFeed || prevProps.diaper !== this.props.diaper || prevState.rowsPerPage !== this.state.rowsPerPage) {\n            const {data, size} = this.getData();\n            this.setState({\n                data,\n                page: Math.max(0, Math.min(this.state.page, data.length - 1)),\n                size\n            })\n        }\n    }\n\n    private getData() {\n        const allData: any = [...Object.values(this.props.babyBottle), ...Object.values(this.props.breastFeed), ...Object.values(this.props.diaper)];\n        allData.sort((a: any, b: any) => {\n            const aScore = a.start || a.time;\n            const bScore = b.start || b.time;\n            return bScore - aScore;\n        });\n        const data: DataModel[][] = [];\n        for (let i = 0; i * this.state.rowsPerPage < allData.length; i++) {\n            data.push(allData.slice(i * this.state.rowsPerPage, Math.min((i + 1) * this.state.rowsPerPage, allData.length)));\n        }\n        if (data.length === 0) {\n            data.push([]);\n        }\n        return {data, size: allData.length};\n    }\n\n    renderRows() {\n        return this.state.data[this.state.page].map((d: any) => {\n            if (d.time) {\n                return this.renderDiaperRow(d);\n            } else if (d.quantity) {\n                return this.renderBabyBottleRow(d);\n            } else {\n                return this.renderBreastFeedRow(d);\n            }\n        })\n    }\n\n    private renderBreastFeedRow(data: BreastFeedData) {\n        const mode = data.type === LEFT ? ManualModalMode.BREAST_L : ManualModalMode.BREAST_R;\n        const onDelete = () => {\n            this.props.removeBreastFeedData(data.start);\n        }\n        return <TableRow key={'breastFeed' + data.start}>\n            <TableCell key='start'>{formatDate(data.start * 1000)}</TableCell>\n            <TableCell key='label'>Sein {data.type === 'l' ? '(G)' : '(D)'}</TableCell>\n            <TableCell key='duration'>{formatDuration(data.duration)}</TableCell>\n            <TableCell key='quantity'></TableCell>\n            <TableCell key='actions'>\n                <ManualModal modalTitle='Modifier' iconButton={<EditIcon fontSize='small'/>} mode={mode} data={data} />\n                <IconButton color=\"secondary\" onClick={onDelete}><DeleteIcon fontSize='small'/></IconButton>    \n            </TableCell>\n        </TableRow>\n    }\n\n    private renderDiaperRow(data: DiaperData ) {\n        const onDelete = () => {\n            this.props.removeDiaperData(data.time);\n        }\n        return <TableRow key={'diaper' + data.time}>\n            <TableCell key='start'>{formatDate(data.time * 1000)}</TableCell>\n            <TableCell key='label'>Couche ({data.type === 'p' ? 'P' : 'C'})</TableCell>\n            <TableCell key='duration'></TableCell>\n            <TableCell key='quantity'></TableCell>\n            <TableCell key='actions'>\n                <IconButton color=\"secondary\" onClick={onDelete}><DeleteIcon fontSize='small'/></IconButton>\n            </TableCell>\n        </TableRow>\n    }\n\n    private renderBabyBottleRow(data: BabyBottleData) {\n        const onDelete = () => {\n            this.props.removeBabyBottleData(data.start);\n        }\n        return <TableRow key={'babyBottle' + data.start}>\n        <TableCell key='start'>{formatDate(data.start * 1000)}</TableCell>\n        <TableCell key='label'>Biberon</TableCell>\n        <TableCell key='duration'>{formatDuration(data.duration)}</TableCell>\n        <TableCell  key='quantity'>{data.quantity}</TableCell>\n        <TableCell  key='actions'>\n            <ManualModal modalTitle='Modifier' iconButton={<EditIcon fontSize='small'/>} mode={ManualModalMode.BABY_BOTTLE} data={data}/>\n            <IconButton color=\"secondary\" onClick={onDelete}><DeleteIcon fontSize='small' /></IconButton>\n        </TableCell>\n    </TableRow>\n    }\n}\n\nconst mapDispatch = {...babyBottleActions, ...breastFeedActions, ...DiaperActions};\n\nconst mapState = (state: RootState) => ({\n    babyBottle: state.babyBottle.data,\n    breastFeed: state.breastFeed.data,\n    diaper: state.diaper.data\n})\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ActivityTable = connector(ActivityTableBase);","import React, { ChangeEvent, Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Input, MenuItem, Select, TextField } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { breastFeedActions } from \"../../features/breastFeed/breastFeedSlice\";\nimport { RootState } from \"../../app/store\";\nimport { babyBottleActions, DiaperActions } from \"../../features\";\nimport { createRef } from \"react\";\n\ninterface Props extends PropsFromRedux {\n}\n\ninterface State {\n    open: boolean;\n    isImporting: boolean;\n    input: 'file' | 'input'\n}\n\nclass ImportModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, isImporting: false, input: 'file'};\n    }\n\n    private textFieldRef = createRef<HTMLTextAreaElement>();\n\n    public render() {\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Importer\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Importer\n            </DialogTitle>\n            <DialogContent>\n                <Select value={this.state.input} onChange={this.onTypeChange}>\n                    <MenuItem value='file'>Importer depuis un fichier json</MenuItem>\n                    <MenuItem value='input'>Importer depuis du texte</MenuItem>\n                </Select>\n                {this.state.input === 'file' ?\n                <FormControl>\n                <Input disableUnderline id='file-import' type='file'></Input>\n            </FormControl> :\n            <TextField inputRef={this.textFieldRef} placeholder='Entrer les données au format json. Exemple: {\"babyBottle\":{\"1626014654\":{\"start\":1626014654,\"duration\":1,\"quantity\":60}},\"diaper\":{\"1626014657\":{\"time\":1626014657,\"type\":\"p\"},\"1626014658\":{\"time\":1626014658,\"type\":\"s\"}},\"breastFeed\":{\"1626014649\":{\"start\":1626014649,\"duration\":2,\"type\":\"l\"},\"1626014651\":{\"start\":1626014651,\"duration\":2,\"type\":\"r\"}}}' multiline={true}>\n            </TextField>\n            }\n\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={this.updateState} disabled={this.state.isImporting} color=\"secondary\">\n                Importer\n            </Button>\n            <Button onClick={this.closeModal} color=\"secondary\">\n                Fermer\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private onTypeChange = (event: ChangeEvent<{name?: string, value: unknown}>) => {\n        this.setState({\n            input: event.target.value as 'file' | 'input'\n        })\n    }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        this.setState({open: false});\n    }\n\n    private updateState = () => {\n        const file = (document.getElementById(\"file-import\") as HTMLInputElement)?.files?.[0];\n        if (file && this.state.input === 'file') {\n            const reader = new FileReader();\n            reader.readAsText(file, \"UTF-8\");\n            this.setState({isImporting: true});\n            reader.onload = (evt: any) => {\n                const data = evt.target.result;\n                this.updateData(data);\n                this.setState({open: false, isImporting: false});\n            }\n            reader.onerror = (evt: any) => {\n                this.setState({\n                    isImporting: false\n                })\n            }\n        } else if (this.state.input === 'input') {\n            const value = this.textFieldRef.current?.value;\n            this.updateData(value);\n            this.setState({open: false});\n        }\n    }\n\n    private updateData = (value: string | undefined) => {\n        if (value) {\n            try {\n                const jsonObject: any = JSON.parse(value);\n                if (jsonObject.babyBottle) {\n                    this.props.importBabyBottleData(jsonObject.babyBottle);\n                }\n                if (jsonObject.diaper) {\n                    this.props.importDiaperData(jsonObject.diaper);\n                }\n                if (jsonObject.breastFeed) {\n                    this.props.importBreastFeedData(jsonObject.breastFeed);\n                }\n            } catch (e) {\n    \n            }\n        }\n    }\n}\n\nconst mapDispatch = {...babyBottleActions, ...breastFeedActions, ...DiaperActions};\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ImportModal = connector(ImportModalBase);","import { Button, MenuItem } from \"@material-ui/core\";\nimport { FormControl, Input, InputLabel, Select } from \"@material-ui/core\";\nimport { Chart, registerables } from \"chart.js\";\nimport { ChangeEvent, createRef, PureComponent, RefObject } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from '../../app/store';\nimport { LEFT, PEE, RIGHT, STOOL } from \"../../interfaces\";\nimport { BABY_BOTTLE_TYPE } from \"../../interfaces/babyBottle.interface\";\nimport { DataModel } from \"../../interfaces/data.interface\";\nimport { formatDate, getInputFormattedTime, MONTHS } from \"../../utils/date.utils\";\n\nChart.register(...registerables);\n\nenum Mode {\n    MONTHS, WEEKS, WEEK\n}\n\ninterface Props extends PropsFromRedux {\n\n}\n\ninterface State {\n    mode: Mode;\n    startDate: number\n}\n\n\n\n\nclass SummaryChartBase extends PureComponent<Props, State> {\n\n    private feedContainerRef: RefObject<HTMLCanvasElement> = createRef();\n    private diaperContainerRef: RefObject<HTMLCanvasElement> = createRef();\n\n    private feedChart!: Chart;\n\n    private diaperChart!: Chart;\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            mode: Mode.WEEK,\n            startDate: Math.floor((Date.now() - 6 * 24 * 60 * 60 * 1000) / 1000)\n        }\n    }\n    \n\n    public componentDidMount() {\n        const {labels, data: babyBottleData} = this.getBabyBottleData();\n        const {data: breastFeedData} = this.getBreastFeedData();\n        this.feedChart = new Chart(this.feedContainerRef.current!, {\n            type: 'bar',\n            data: {\n                labels,\n                datasets: [{\n                    yAxisID: 'babyBottleAxis',\n                    label: 'Biberon (mL)',\n                    data: babyBottleData,\n                    backgroundColor: 'lightblue'\n                },\n                {\n                    yAxisID: 'breastFeedAxis',\n                    label: 'Sein (temps en min)',\n                    data: breastFeedData,\n                    backgroundColor: 'green'\n                }\n            ]\n            },\n            options: {\n                scales: {\n                    breastFeedAxis: {\n                        position: 'right',\n                      }\n                }\n            }\n        });\n\n        const {data: peeData} = this.getDiapersPeeData();\n        const {data: stoolData} = this.getDiapersStoolData();\n        this.diaperChart = new Chart(this.diaperContainerRef.current!, {\n            type: 'bar',\n            data: {\n                labels,\n                datasets: [{\n                    label: 'Pipi',\n                    data: peeData,\n                    backgroundColor: 'lightblue'\n                },\n                {\n                    label: 'Caca',\n                    data: stoolData,\n                    backgroundColor: 'orange'\n                }\n            ]\n            },\n            options: {}\n        });\n    }\n\n    private updateCharts() {\n        const {labels, data: babyBottleData} = this.getBabyBottleData();\n        const {data: breastFeedData} = this.getBreastFeedData();\n        this.feedChart.data = {\n                labels,\n                datasets: [{\n                    yAxisID: 'babyBottleAxis',\n                    label: 'Biberon (mL)',\n                    data: babyBottleData,\n                    backgroundColor: 'lightblue'\n                },\n                {\n                    yAxisID: 'breastFeedAxis',\n                    label: 'Sein (temps)',\n                    data: breastFeedData,\n                    backgroundColor: 'green'\n                }\n            ]\n            };\n\n        const {data: peeData} = this.getDiapersPeeData();\n        const {data: stoolData} = this.getDiapersStoolData();\n        this.diaperChart.data = {\n                labels,\n                datasets: [{\n                    label: 'Pipi',\n                    data: peeData,\n                    backgroundColor: 'lightblue'\n                },\n                {\n                    label: 'Caca',\n                    data: stoolData,\n                    backgroundColor: 'orange'\n                }\n            ]\n            };\n        this.feedChart.update();\n        this.diaperChart.update();\n    }\n\n    private getBabyBottleData = () => {\n        return this.extractData([BABY_BOTTLE_TYPE], (d: DataModel) => {\n            return d.quantity!\n        });\n    }\n\n    private getBreastFeedData = () => {\n        return this.extractData([LEFT, RIGHT], (d: DataModel) => {\n            return Math.round(d.duration! / 60);\n        });\n    }\n\n    private getDiapersPeeData = () => {\n        return this.extractData([PEE], (d: DataModel) => {\n            return 1\n        });\n    }\n\n    private getDiapersStoolData = () => {\n        return this.extractData([STOOL], (d: DataModel) => {\n            return 1\n        });\n    }\n\n    private getData = (start: number, end: number, types: string[], getCurrentValue: (d: DataModel) => number) => {\n        const nbDays = Math.round((end - start) / (24 * 60 * 60));\n        return Math.round(this.props.data.reduce((previousValue: number, currentValue: DataModel) => {\n            const isValid = types.includes(currentValue.type) && start <= currentValue.start && end > currentValue.start;\n            return previousValue + (isValid ? getCurrentValue(currentValue) : 0);\n        }, 0) / nbDays);\n    }\n\n    private extractData = (types: string[], getCurrentValue: (d: DataModel) => number) => {\n        const labels: string[] = [];\n        const data: number[] = [];\n        let date: number = this.state.startDate;\n        switch(this.state.mode) {\n            case Mode.WEEKS: {\n                for (let i = 0; i < 12; i++) {\n                    const {start, end} = this.getWeeksThreshold(date);\n                    const value = this.getData(start, end, types, getCurrentValue);\n                    date = end;\n                    labels.push(`${formatDate(start * 1000, false)}-${formatDate(end * 1000, false)}`);\n                    data.push(value);\n                }\n                break;\n            }\n            case Mode.WEEK: {\n                for (let i = 0; i < 7; i++) {\n                    const {start, end} = this.getDayThreshold(date);\n                    const value = this.getData(start, end, types, getCurrentValue);\n                    date = end;\n                    labels.push(formatDate(start * 1000, false));\n                    data.push(value);\n                }\n                break;\n            }\n            default: {\n                for (let i = 0; i < 12; i++) {\n                    const {start, end} = this.getMonthThreshold(date);\n                    const value = this.getData(start, end, types, getCurrentValue);\n                    date = end;\n                    const realDate = new Date(start * 1000);\n                    labels.push(`${MONTHS[realDate.getMonth()]} ${realDate.getFullYear()}`);\n                    data.push(value);\n                }\n                break;\n            }\n        }\n        return {data, labels};\n    }\n\n    private getDayThreshold(time: number) {\n        const d = new Date(time * 1000);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate()).getTime() / 1000;\n        const end = start + 24 * 60 * 60;\n        return {start, end};\n    }\n\n    private getWeeksThreshold(time: number) {\n        const d = new Date(time * 1000);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate()).getTime() / 1000;\n        const end = start + 7 * 24 * 60 * 60;\n        return {start, end};\n    }\n\n\n    private getMonthThreshold(time: number) {\n        const d = new Date(time * 1000);\n        const year = d.getFullYear();\n        const month = d.getMonth();\n        const nextMonth = (month + 1) % 12;\n        let nextYear = nextMonth ? year : year + 1;\n        const start = new Date(year, month).getTime() / 1000;\n        const end = new Date(nextYear, nextMonth).getTime() / 1000;\n        return {start, end};\n    }\n\n    public render() {\n        if (this.feedContainerRef.current && this.diaperContainerRef.current) {\n            this.updateCharts();\n        }\n        return <>\n            <div>\n                <FormControl>\n                    <Select value={this.state.mode} onChange={this.onModeChange} MenuProps={{\n            anchorOrigin: {\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            },\n            getContentAnchorEl: null\n          }}>\n                        <MenuItem value={Mode.MONTHS}>Mois</MenuItem>\n                        <MenuItem value={Mode.WEEKS}>Semaines</MenuItem>\n                        <MenuItem value={Mode.WEEK}>Jours</MenuItem>\n                    </Select>\n                </FormControl>\n                    <Button style={{\n                        padding: '0',\n                        minWidth: '20px'\n                    }} size='small' onClick={this.previousDate} variant='contained' color='primary'>{\"<\"}</Button>\n                    <Input\n                        style={{\n                            margin: '0 10px' \n                        }}\n                        type='datetime-local'\n                        value={getInputFormattedTime(this.state.startDate)}\n                        onChange={this.onStartDateChange}\n                    />\n                    <Button style={{\n                        padding: '0',\n                        minWidth: '20px'\n                    }}  size='small' onClick={this.nextDate} variant='contained' color='primary'>{\">\"}</Button>\n\n            </div>\n            <div>\n                <canvas ref={this.feedContainerRef} />\n                <canvas ref={this.diaperContainerRef} />\n            </div>\n            </>;\n    }\n\n    private onModeChange = (event: ChangeEvent<{name?: string, value: unknown}>) => {\n        const newMode = event.target.value as Mode;\n        const defaultDate = this.getDefaultDate(newMode);\n        this.setState({mode: newMode, startDate: defaultDate});\n    }\n\n    private onStartDateChange = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const date = new Date(event.target.value);\n        this.setState({startDate: date.getTime() / 1000});\n    }\n\n    private nextDate = () => {\n        this.updateDate('+');\n    }\n\n    private previousDate = () => {\n        this.updateDate('-');\n    }\n\n    private updateDate(operation: '+' | '-') {\n        const newDate = this.getDefaultDate(this.state.mode, this.state.startDate, operation);\n        this.setState({startDate: newDate});\n    }\n\n    private getDefaultDate = (mode: Mode, date?: number, operation?: '+' | '-', ) => {\n        const factor = operation === '+' ? -1 : 1; \n        const today = date || Math.floor(Date.now() / 1000);\n        switch(mode) {\n            case Mode.MONTHS:{\n                return today - factor * 334 * 24 * 60 * 60;\n            }\n            case Mode.WEEKS: {\n                return today - factor * (12 * 7 - 1) * 24 * 60 * 60;\n            }\n            default: {\n                return today - factor * 6 * 24 * 60 * 60;\n            }\n        }\n    }\n}\n\nconst mapState = (state: RootState) => {\n    const babyBottleData: DataModel[] = Object.values(state.babyBottle.data).map((babyData => {\n        return {type: BABY_BOTTLE_TYPE, start: babyData.start, duration: babyData.duration, quantity: babyData.quantity };\n    }));\n    const breastFeedData: DataModel[]  = Object.values(state.breastFeed.data).map((data => {\n        return {type: data.type, start: data.start, duration: data.duration };\n    }));\n    const diaperData: DataModel[]  = Object.values(state.diaper.data).map((data => {\n        return {type: data.type, start: data.time };\n    }));\n    const data: DataModel[] = [...babyBottleData, ...breastFeedData, ...diaperData];\n    data.sort((a: DataModel, b: DataModel) => {\n        return b.start - a.start;\n    })\n\n    return {\n        data\n    };\n}\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const SummaryChart = connector(SummaryChartBase);","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { breastFeedActions } from \"../../features/breastFeed/breastFeedSlice\";\nimport { RootState } from \"../../app/store\";\nimport { download } from \"../../utils/download.utils\";\n\ninterface Props extends PropsFromRedux {\n}\n\ninterface State {\n    open: boolean;\n}\n\nclass ExportModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Exporter\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Exporter\n            </DialogTitle>\n            <DialogContent>\n                <TextField multiline={true} id='content-to-export' inputProps={{\n                    readOnly: true,\n                    }}\n                value={JSON.stringify(this.props.state)}>\n                </TextField>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={this.download} color=\"secondary\">\n                Télécharger\n            </Button>\n            <Button onClick={this.copyToClipboard} color=\"secondary\">\n                Copier\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Fermer\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n    private download = () => {\n        download(this.props.state, `maternity-data-${Date.now()}`);\n    }\n\n    private copyToClipboard = () => {\n        /* Get the text field */\n        var copyText: any = document.getElementById(\"content-to-export\");\n      \n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999999); /* For mobile devices */\n      \n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n      }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        this.setState({open: false});\n    }\n}\n\nconst mapState = (state: RootState) => {\n    return {\n        state: {\n            babyBottle: state.babyBottle.data,\n            diaper: state.diaper.data,\n            breastFeed: state.breastFeed.data\n        }\n    }\n}\n\nconst mapDispatch = breastFeedActions;\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ExportModal = connector(ExportModalBase);","\nexport function download(jsonObject: any, fileName: string) {\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(jsonObject));\n    const dlAnchorElem = document.getElementById('downloadAnchorElem') as HTMLElement;\n    dlAnchorElem.setAttribute(\"href\",     dataStr     );\n    dlAnchorElem.setAttribute(\"download\", `${fileName}.json`);\n    dlAnchorElem.click();\n}\n","import { PureComponent } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport {formatDate} from '../../utils/date.utils';\n\ninterface DiaperActivityProps extends PropsFromRedux {\n\n}\n\nclass DiaperActivityBase extends PureComponent<DiaperActivityProps> {\n    public render() {\n        return Object.keys(this.props.data).map((key: any) => {\n            const singleData = this.props.data[key];\n            const date = singleData.time * 1000;\n            const dateString = formatDate(date);\n            const type = singleData.type === 'p' ? 'Pipi' : 'Caca';\n            return <div>{dateString}: Couche ({type})</div>;\n        }).reverse();\n    }\n}\n\nconst mapState = (state: RootState) => ({\n    data: state.diaper.data,\n})\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const DiaperActivity = connector(DiaperActivityBase);","import { PureComponent } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport {formatDate} from '../../utils/date.utils';\n\ninterface BreastFeedActivityProps extends PropsFromRedux {\n\n}\n\nclass BreastFeedActivityBase extends PureComponent<BreastFeedActivityProps> {\n    public render() {\n        return Object.keys(this.props.data).map((key: any) => {\n            const singleData = this.props.data[key];\n            const date = singleData.start * 1000 + singleData.duration * 1000;\n            const dateString = formatDate(date);\n            const type = singleData.type === 'r' ? 'droit' : 'gauche';\n            return <div>{dateString}: {singleData.duration}s (Sein {type})</div>;\n        }).reverse();\n    }\n}\n\nconst mapState = (state: RootState) => ({\n    data: state.breastFeed.data,\n})\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const BreastFeedActivity = connector(BreastFeedActivityBase);","import { FeedData } from \"./feed.interface\";\n\nexport const BABY_BOTTLE_TYPE = 'babyBottle';\n\nexport interface BabyBottleData extends FeedData {\n    quantity: number\n}","import React from 'react';\nimport './App.css';\nimport {BreastFeedModal} from './components/breastFeed/BreastFeedModal';\nimport {DiaperModal} from './components/diaper/DiaperModal';\nimport { BabyBottleModal } from './components/babyBottle/BabyBottleModal';\nimport { ActivityTable } from './components/activityTable/activityTable';\nimport { ManualModal } from './components/manual/ManualModal';\nimport { ImportModal } from './components/data/ImportModal';\nimport { ExportModal } from './components/data/ExportModal';\nimport { SummaryChart } from './components';\nimport { useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nenum Mode {\n  MAIN, STATS\n}\n\nexport function App() {\n  const [mode, setMode] = useState(Mode.MAIN);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <div className='action-wrapper'>\n        {\n            mode === Mode.MAIN ? <>        <div className='actions'>\n            <BreastFeedModal type='l' />\n            <BreastFeedModal type='r' />\n            <BabyBottleModal />\n            <DiaperModal />\n            <ManualModal modalTitle='Ajouter'></ManualModal>\n          </div>\n          <div className='actions'>\n            <ExportModal />\n            <ImportModal />\n            <Button variant='outlined' color='primary' onClick={() => setMode(Mode.STATS)}>Statistiques</Button>\n          </div>\n          </>\n            \n            :<div className='actions'> <Button variant='outlined' color='primary' onClick={() => setMode(Mode.MAIN)}>Logger activités</Button></div>\n          }\n      </div>\n      {mode === Mode.STATS &&\n      <div>\n        <SummaryChart />\n      </div>\n      }\n      {mode === Mode.MAIN &&\n      <div>\n        <ActivityTable />\n      </div>\n      }\n      <a id=\"downloadAnchorElem\" style={{display: 'none'}}></a>\n    </div>\n  );\n}","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { babyBottleReducer } from '../features';\nimport {breastFeedReducer} from '../features/breastFeed/breastFeedSlice';\nimport {diaperReducer} from '../features/diaper/diaperSlice';\n\nexport const store = configureStore({\n  reducer: {\n    babyBottle: babyBottleReducer,\n    breastFeed: breastFeedReducer,\n    diaper: diaperReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorkerRegistration';\nimport { getAllBabyBottleData, getAllBreastFeedData, getAllDiapersData, initDb } from './utils';\nimport { babyBottleActions, breastFeedActions, DiaperActions } from './features';\n\nconst db = window.indexedDB;\n\nsetTimeout(() => {\n  initDb().then(() => {\n    Promise.all([getAllBabyBottleData(), getAllBreastFeedData(), getAllDiapersData()]).then(([babyBottleData, breastFeedData, allDiapersData]) => {\n      console.log(babyBottleData, breastFeedData, allDiapersData);\n      store.dispatch(babyBottleActions.loadData(arrayToObject(babyBottleData, 'start')));\n      store.dispatch(breastFeedActions.loadData(arrayToObject(breastFeedData, 'start')));\n      store.dispatch(DiaperActions.loadData(arrayToObject(allDiapersData, 'time')));\n    });\n  });\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}, 200);\n\n\nfunction arrayToObject(array: any[], key: string) {\n  const obj: any = {};\n  array.forEach((el: any) => {\n    obj[el[key]] = el;\n  })\n  return obj;\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}