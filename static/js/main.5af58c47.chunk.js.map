{"version":3,"sources":["utils/date.utils.ts","utils/db.utils.ts","features/breastFeed/breastFeedSlice.ts","interfaces/breastFeed.interfaces.ts","components/breastFeed/BreastFeedModal.tsx","features/diaper/diaperSlice.ts","features/babyBottle/babyBottleSlice.ts","interfaces/diaper.interfaces.ts","components/diaper/DiaperModal.tsx","components/babyBottle/BabyBottleModal.tsx","components/activityTable/activityTable.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","length","dayString","join","db","BreastFeedStatus","ObjectStore","BREAST_FEED","DIAPERS","BABY_BOTTLE","a","openDB","upgrade","database","oldVersion","newVersion","transaction","createObjectStore","keyPath","data","put","getAllBreastFeedData","getAll","getAllBabyBottleData","getAllDiapersData","initialState","status","IDLE","lastStart","undefined","updateStorage","putBreastFeedData","breastFeedSlice","createSlice","name","reducers","startRightBreastFeeding","state","FEEDING_R","Math","round","now","startLeftBreastFeeding","FEEDING_L","stopBreastFeeding","action","previousStatus","start","payload","breastFeedData","duration","type","loadData","breastFeedActions","actions","breastFeedReducer","reducer","BreastFeedModalBase","props","getDuration","getNowTime","startTime","floor","realMinutes","realSeconds","hoursString","getFormattedTime","minutesString","secondsString","openModal","clearInterval","timeout","setInterval","forceUpdate","setState","open","refreshInterval","saveData","closeModal","num","this","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogActions","autoFocus","Component","mapDispatch","BreastFeedModal","connect","connector","updateLocalStorage","putDiapersData","BabyBottleStatus","diaperSlice","logPeeDiaper","time","diaperData","logStollDiaper","DiaperActions","diaperReducer","DiaperModalBase","logPee","logStool","DiaperModal","putBabyBottleData","babyBottleSlice","startBabyBottle","FEEDING","stopBabyBottle","babyBottleData","quantity","babyBottleActions","babyBottleReducer","LOCAL_STORAGE_KEY","BabyBottleModalBase","handleChange","evt","Number","target","value","NaN","localStorage","setItem","toString","saveQuantity","getItem","FormControl","Input","onChange","endAdornment","InputAdornment","position","FormHelperText","BabyBottleModal","ActivityTableBase","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","renderRows","Object","values","babyBottle","breastFeed","diaper","sort","b","aScore","map","renderDiaperRow","renderBabyBottleRow","renderBreastFeedRow","PureComponent","ActivityTable","App","className","store","configureStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","arrayToObject","array","key","obj","forEach","el","initDb","Promise","all","allDiapersData","dispatch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5af58c47.chunk.js","sourcesContent":["export function formatDate(date: number | string) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear(),\n        hours = '' + d.getHours(),\n        minutes = '' + d.getMinutes(),\n        seconds = '' + d.getSeconds();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n    if (hours.length < 2) hours = '0' + hours;\n    if (minutes.length < 2) minutes = '0' + minutes;\n    if (seconds.length < 2) seconds = '0' + seconds;\n\n    const dayString = [year, month, day].join('-');\n    return `${dayString} ${hours}:${minutes}:${seconds}`;\n}\n\nexport function getDateFromString(date: string) {\n    const [dateString, timeString] = date.split(' ');\n    const [year, month, day] = dateString.split('-');\n    const [hours, minutes, seconds] = timeString.split(':');\n    return new Date(+year, +month, +day, +hours, +minutes, +seconds);\n}\n\nexport const MONTHS = ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Aout', 'Sept', 'Oct', 'Nov', 'Dec'];\nexport const WEEKDAYS = ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'];\n\nexport function getDaysOfMonth(year: number, month: number) {\n    const nbDays = new Date(year, month, 0).getDate();\n    const dateArray: string[] = [];\n    for (let d = 0; d < nbDays; d++) {\n        dateArray.push((d+1).toString());\n    }\n    return dateArray;\n}","import { openDB, deleteDB, IDBPDatabase, IDBPTransaction, StoreNames } from 'idb';\nimport { BreastFeedData, DiaperData } from '../interfaces';\nimport { BabyBottleData } from '../interfaces/babyBottle.interface';\n\nlet db: IDBPDatabase;\n\nexport const ObjectStore = {\n    BREAST_FEED: 'breastFeed',\n    DIAPERS: 'diapers',\n    BABY_BOTTLE: 'babyBottle'\n}\n\nexport async function initDb() {\n    db = await openDB('maternity', 1, {\n        upgrade: (database: IDBPDatabase, oldVersion: number, newVersion: number | null, transaction: IDBPTransaction<any, StoreNames<any>[], 'versionchange'>) => {\n            database.createObjectStore(ObjectStore.BREAST_FEED, {keyPath: 'start'});\n            database.createObjectStore(ObjectStore.DIAPERS, {keyPath: 'time'});\n            database.createObjectStore(ObjectStore.BABY_BOTTLE, {keyPath: 'start'});\n        }\n    });\n    return db;\n}\n\nexport async function putBreastFeedData(data: BreastFeedData) {\n    db.put(ObjectStore.BREAST_FEED, data);\n}\n\nexport async function putDiapersData(data: DiaperData) {\n    db.put(ObjectStore.DIAPERS, data);\n}\n\nexport async function putBabyBottleData(data: BabyBottleData) {\n    db.put(ObjectStore.BABY_BOTTLE, data);\n}\n\nexport async function deleteBreastFeedData(key: number) {\n    db.delete(ObjectStore.BREAST_FEED, key);\n}\n\nexport async function deleteDiapersData(key: number) {\n    db.delete(ObjectStore.DIAPERS, key);\n}\n\nexport async function deleteBabyBottleData(key: number) {\n    db.delete(ObjectStore.BABY_BOTTLE, key);\n}\n\nexport async function getAllBreastFeedData(): Promise<BreastFeedData[]> {\n    return db.getAll(ObjectStore.BREAST_FEED);\n}\n\nexport async function getAllBabyBottleData(): Promise<BabyBottleData[]> {\n    return db.getAll(ObjectStore.BABY_BOTTLE);\n}\n\nexport async function getAllDiapersData(): Promise<DiaperData[]> {\n    return db.getAll(ObjectStore.DIAPERS)\n}\n\nexport async function resetData() {\n    Object.values(ObjectStore).forEach((storeKey: string) => {\n        resetObjectStore(storeKey);\n    });\n}\n\nexport async function resetObjectStore(storeKey: string) {\n    db.deleteObjectStore(storeKey);\n    db.createObjectStore(storeKey);\n}","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {BreastFeedData, BreastFeedType, LEFT, RIGHT} from '../../interfaces/breastFeed.interfaces';\nimport { putBreastFeedData } from '../../utils';\n\nexport enum BreastFeedStatus {\n  IDLE, FEEDING_R, FEEDING_L\n}\n\nexport interface BreastFeedState {\n  data: {[start: number]: BreastFeedData};\n  status: BreastFeedStatus;\n  lastStart: number | undefined;\n}\n\nconst initialState: BreastFeedState = {\n  data: {},\n  status: BreastFeedStatus.IDLE,\n  lastStart: undefined\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\n// export const incrementAsync = createAsyncThunk(\n//   'counter/fetchCount',\n//   async (amount: number) => {\n//     const response = await fetchCount(amount);\n//     // The value we return becomes the `fulfilled` action payload\n//     return response.data;\n//   }\n// );\n\nfunction updateStorage(data: BreastFeedData) {\n  putBreastFeedData(data);\n}\n\nexport const breastFeedSlice = createSlice({\n  name: 'breastFeed',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    startRightBreastFeeding: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.status = BreastFeedStatus.FEEDING_R;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    startLeftBreastFeeding: (state) => {\n      state.status = BreastFeedStatus.FEEDING_L;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    stopBreastFeeding: (state, action: PayloadAction<number | undefined>) => {\n      const previousStatus = state.status;\n      const start = state.lastStart;\n      if (start !== undefined && previousStatus !== BreastFeedStatus.IDLE && action.payload !== undefined) {\n        const duration = action.payload;\n        const breastFeedData: BreastFeedData = {\n          start,\n          duration,\n          type: previousStatus === BreastFeedStatus.FEEDING_R ? RIGHT : LEFT\n        };\n        state.data = {...state.data, [start]: breastFeedData};\n        updateStorage(breastFeedData);\n      }\n\n      state.status = BreastFeedStatus.IDLE;\n      state.lastStart = undefined;\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: BreastFeedData}>) => {\n      state.data = action.payload;\n    }\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    // incrementByAmount: (state, action: PayloadAction<number>) => {\n    //   state.value += action.payload;\n    // },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(incrementAsync.pending, (state) => {\n  //       state.status = 'loading';\n  //     })\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\n  //       state.status = 'idle';\n  //       state.value += action.payload;\n  //     });\n  // },\n});\n\nexport const breastFeedActions = breastFeedSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n// export const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount: number): AppThunk => (\n//   dispatch,\n//   getState\n// ) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport const breastFeedReducer = breastFeedSlice.reducer;\n","import { FeedData } from \"./feed.interface\";\n\nexport const RIGHT = 'r';\nexport const LEFT = 'l';\n\nexport type BreastFeedType = typeof RIGHT | typeof LEFT;\n\nexport interface BreastFeedData extends FeedData {\n    type: BreastFeedType\n}","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { breastFeedActions } from \"../../features/breastFeed/breastFeedSlice\";\nimport { BreastFeedType, RIGHT } from \"../../interfaces/breastFeed.interfaces\";\n\ninterface Props extends PropsFromRedux {\n    type: BreastFeedType\n}\n\ninterface State {\n    startTime: number;\n    open: boolean;\n    refreshInterval: any;\n}\n\nclass BreastFeedModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, startTime: 0, refreshInterval: undefined};\n    }\n\n    public render() {\n        const type = this.props.type === RIGHT ? 'droit' : 'gauche';\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Sein {type}\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Sein {type}\n            </DialogTitle>\n            <DialogContent>\n                {this.getDuration()}\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                Fini!\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private getDuration = () => {\n        const duration = this.getNowTime() - this.state.startTime;\n        const minutes =  Math.floor(duration / 60);\n        const hours = Math.floor(minutes / 60);\n\n        const realMinutes = minutes - hours * 60;\n        const realSeconds = duration - minutes * 60;\n        \n        const hoursString = this.getFormattedTime(hours);\n        const minutesString = this.getFormattedTime(realMinutes);\n        const secondsString = this.getFormattedTime(realSeconds);\n        return `${hoursString}:${minutesString}:${secondsString}`;\n    }\n\n    private openModal = () => {\n        this.clearInterval();\n        const timeout = setInterval(() => {\n            this.forceUpdate();\n        }, 1000);\n        this.setState({open: true, startTime: this.getNowTime(), refreshInterval: timeout});\n        if (this.props.type === RIGHT) {\n            this.props.startRightBreastFeeding();\n        } else {\n            this.props.startLeftBreastFeeding();\n        }\n    }\n\n    private clearInterval = () => {\n        if (this.state.refreshInterval !== undefined) {\n            clearInterval(this.state.refreshInterval);\n        }\n    }\n\n    private saveData = () => {\n        this.clearInterval();\n        const now = this.getNowTime();\n        this.props.stopBreastFeeding(now - this.state.startTime);\n        this.setState({open: false, refreshInterval: undefined});\n    }\n    \n    private closeModal = () => {\n        this.clearInterval();\n        this.setState({open: false, refreshInterval: undefined});\n        this.props.stopBreastFeeding(undefined);\n    }\n\n    private getNowTime = () => {\n        return Math.round(Date.now() / 1000);\n    }\n\n    private getFormattedTime = (num: number) => {\n        return num < 10 ? `0${num}` : num;\n    }\n}\n\nconst mapDispatch = breastFeedActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const BreastFeedModal = connector(BreastFeedModalBase);","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {DiaperData, PEE, STOOL} from '../../interfaces/diaper.interfaces';\nimport { putDiapersData } from '../../utils';\n\nexport interface DiaperState {\n  data: {[start: number]: DiaperData};\n}\n\nconst initialState: DiaperState = {\n  data: {},\n};\n\nfunction updateLocalStorage(data: DiaperData) {\n  putDiapersData(data);\n}\n\nexport const diaperSlice = createSlice({\n  name: 'Diaper',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    logPeeDiaper: (state) => {\n      const time = Math.round(Date.now() / 1000);\n      const diaperData: DiaperData = {time, type: PEE};\n      state.data = {...state.data, [time]: diaperData};\n      updateLocalStorage(diaperData);\n    },\n    logStollDiaper: (state) => {\n        const time = Math.round(Date.now() / 1000);\n        const diaperData: DiaperData = {time, type: STOOL};\n        state.data = {...state.data, [time]: diaperData};\n        updateLocalStorage(diaperData);\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: DiaperData}>) => {\n      state.data = action.payload;\n    }\n  },\n});\n\nexport const DiaperActions = diaperSlice.actions;\n\nexport const diaperReducer = diaperSlice.reducer;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {BabyBottleData} from '../../interfaces/babyBottle.interface';\nimport { putBabyBottleData } from '../../utils';\n\nexport enum BabyBottleStatus {\n  IDLE, FEEDING\n}\n\nexport interface BabyBottleState {\n  data: {[start: number]: BabyBottleData};\n  status: BabyBottleStatus;\n  lastStart: number | undefined;\n}\n\nconst initialState: BabyBottleState = {\n  data: {},\n  status: BabyBottleStatus.IDLE,\n  lastStart: undefined\n};\n\nfunction updateStorage(data: BabyBottleData) {\n  putBabyBottleData(data);\n}\n\nexport const babyBottleSlice = createSlice({\n  name: 'babyBottle',\n  initialState,\n  reducers: {\n    startBabyBottle: (state) => {\n      state.status = BabyBottleStatus.FEEDING;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    stopBabyBottle: (state, action: PayloadAction<{duration: number, quantity: number} | undefined>) => {\n      const previousStatus = state.status;\n      const start = state.lastStart;\n      if (start !== undefined && previousStatus !== BabyBottleStatus.IDLE && action.payload !== undefined) {\n        const {duration, quantity} = action.payload;\n        const babyBottleData: BabyBottleData = {\n          start,\n          duration,\n          quantity\n        };\n        state.data = {...state.data, [start]: babyBottleData};\n        updateStorage(babyBottleData);\n      }\n\n      state.status = BabyBottleStatus.IDLE;\n      state.lastStart = undefined;\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: BabyBottleData}>) => {\n      state.data = action.payload;\n    }\n  },\n});\n\nexport const babyBottleActions = babyBottleSlice.actions;\n\nexport const babyBottleReducer = babyBottleSlice.reducer;\n","export const PEE = 'p';\nexport const STOOL = 's';\n\nexport type DiaperType = typeof PEE | typeof STOOL;\n\nexport interface DiaperData {\n    time: number,\n    type: DiaperType\n}","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { DiaperActions } from \"../../features/diaper/diaperSlice\";\n\ninterface Props extends PropsFromRedux {\n}\n\ninterface State {\n    open: boolean;\n}\n\nclass DiaperModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Couche\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Couche\n            </DialogTitle>\n            <DialogActions>\n            <Button autoFocus onClick={this.logPee} variant=\"contained\" color=\"primary\">\n                Pipi\n            </Button>\n            <Button autoFocus onClick={this.logStool} variant=\"contained\" color=\"primary\">\n                Caca\n            </Button>\n            <Button autoFocus onClick={this.closeModal} variant=\"contained\" color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n\n    private logPee = () => {\n        this.props.logPeeDiaper();\n        this.closeModal();\n    }\n\n    private logStool = () => {\n        this.props.logStollDiaper();\n        this.closeModal();\n    }\n    \n    private closeModal = () => {\n        this.setState({open: false});\n    }\n}\n\nconst mapDispatch = DiaperActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const DiaperModal = connector(DiaperModalBase);","import React, { ChangeEvent, ChangeEventHandler, Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormHelperText, Input, InputAdornment } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { babyBottleActions } from \"../../features/babyBottle/babyBottleSlice\";\n\ninterface Props extends PropsFromRedux {\n}\n\nconst LOCAL_STORAGE_KEY = 'bottleQuantity';\n\nfunction saveQuantity(quantity: number): void {\n    localStorage.setItem(LOCAL_STORAGE_KEY, quantity.toString());\n}\n\nfunction getQuantity(): number {\n    return Number((localStorage.getItem(LOCAL_STORAGE_KEY) || '60'));\n}\n\ninterface State {\n    startTime: number;\n    open: boolean;\n    refreshInterval: any;\n    quantity: number;\n}\n\nclass BabyBottleModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, startTime: 0, refreshInterval: undefined, quantity: getQuantity()};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Biberon\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Biberon\n            </DialogTitle>\n            <DialogContent>\n                <div>{this.getDuration()}</div>\n                <FormControl>\n                    <Input\n                        value={this.state.quantity}\n                        onChange={this.handleChange}\n                        endAdornment={<InputAdornment position=\"end\">mL</InputAdornment>}\n                        type='number'\n                    />\n                    <FormHelperText>Quantité</FormHelperText>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                Fini!\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private handleChange = (evt: ChangeEvent<HTMLInputElement|HTMLTextAreaElement>) => {\n        let quantity = Number(evt.target.value);\n        if (quantity === NaN) {\n            quantity = this.state.quantity;\n        }\n        this.setState({quantity});\n        saveQuantity(quantity);\n    }\n\n    private getDuration = () => {\n        const duration = this.getNowTime() - this.state.startTime;\n        const minutes =  Math.floor(duration / 60);\n        const hours = Math.floor(minutes / 60);\n\n        const realMinutes = minutes - hours * 60;\n        const realSeconds = duration - minutes * 60;\n        \n        const hoursString = this.getFormattedTime(hours);\n        const minutesString = this.getFormattedTime(realMinutes);\n        const secondsString = this.getFormattedTime(realSeconds);\n        return `${hoursString}:${minutesString}:${secondsString}`;\n    }\n\n    private openModal = () => {\n        this.clearInterval();\n        const timeout = setInterval(() => {\n            this.forceUpdate();\n        }, 1000);\n        this.setState({open: true, startTime: this.getNowTime(), refreshInterval: timeout});\n        this.props.startBabyBottle();\n    }\n\n    private clearInterval = () => {\n        if (this.state.refreshInterval !== undefined) {\n            clearInterval(this.state.refreshInterval);\n        }\n    }\n\n    private saveData = () => {\n        this.clearInterval();\n        const now = this.getNowTime();\n        this.props.stopBabyBottle({duration: now - this.state.startTime, quantity: this.state.quantity});\n        this.setState({open: false, refreshInterval: undefined});\n    }\n    \n    private closeModal = () => {\n        this.clearInterval();\n        this.setState({open: false, refreshInterval: undefined});\n        this.props.stopBabyBottle(undefined);\n    }\n\n    private getNowTime = () => {\n        return Math.round(Date.now() / 1000);\n    }\n\n    private getFormattedTime = (num: number) => {\n        return num < 10 ? `0${num}` : num;\n    }\n}\n\nconst mapDispatch = babyBottleActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const BabyBottleModal = connector(BabyBottleModalBase);","import { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\nimport { PureComponent } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { BreastFeedData, DiaperData } from \"../../interfaces\";\nimport { BabyBottleData } from \"../../interfaces/babyBottle.interface\";\nimport {formatDate} from '../../utils/date.utils';\n\ninterface ActivityTableProps extends PropsFromRedux {\n\n}\n\nclass ActivityTableBase extends PureComponent<ActivityTableProps> {\n    public render() {\n        return <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Durée</TableCell>\n              <TableCell>Qté</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.renderRows()}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    }\n\n    renderRows() {\n        const data: any = [...Object.values(this.props.babyBottle), ...Object.values(this.props.breastFeed), ...Object.values(this.props.diaper)];\n        data.sort((a: any, b: any) => {\n            const aScore = a.start || a.time;\n            const bScore = b.start || b.time;\n            return bScore - aScore;\n        });\n        return data.map((d: any) => {\n            if (d.time) {\n                return this.renderDiaperRow(d);\n            } else if (d.quantity) {\n                return this.renderBabyBottleRow(d);\n            } else {\n                return this.renderBreastFeedRow(d);\n            }\n        })\n    }\n\n    private renderBreastFeedRow(data: BreastFeedData) {\n        return <TableRow>\n            <TableCell>{formatDate(data.start * 1000)}</TableCell>\n            <TableCell>Sein {data.type === 'l' ? '(G)' : '(D)'}</TableCell>\n            <TableCell>{data.duration}s</TableCell>\n            <TableCell></TableCell>\n            <TableCell></TableCell>\n        </TableRow>\n    }\n\n    private renderDiaperRow(data: DiaperData ) {\n        return <TableRow>\n            <TableCell>{formatDate(data.time * 1000)}</TableCell>\n            <TableCell>Couche ({data.type === 'p' ? 'P' : 'C'})</TableCell>\n            <TableCell></TableCell>\n            <TableCell></TableCell>\n            <TableCell></TableCell>\n        </TableRow>\n    }\n\n    private renderBabyBottleRow(data: BabyBottleData) {\n        return <TableRow>\n        <TableCell>{formatDate(data.start * 1000)}</TableCell>\n        <TableCell>Biberon</TableCell>\n        <TableCell>{data.duration}s</TableCell>\n        <TableCell>{data.quantity}</TableCell>\n        <TableCell></TableCell>\n    </TableRow>\n    }\n}\n\nconst mapState = (state: RootState) => ({\n    babyBottle: state.babyBottle.data,\n    breastFeed: state.breastFeed.data,\n    diaper: state.diaper.data\n})\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ActivityTable = connector(ActivityTableBase);","import React from 'react';\nimport './App.css';\nimport {BreastFeedModal} from './components/breastFeed/BreastFeedModal';\nimport {DiaperModal} from './components/diaper/DiaperModal';\nimport {BreastFeedActivity} from './components/breastFeed/BreastFeedActivity';\nimport {DiaperActivity} from './components/diaper/DiaperActivity';\nimport { BabyBottleModal } from './components/babyBottle/BabyBottleModal';\nimport { BabyBottleActivity } from './components/babyBottle/BabyBottleActivity';\nimport { ActivityTable } from './components/activityTable/activityTable';\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <div className='actions'>\n        <BreastFeedModal type='l' />\n        <BreastFeedModal type='r' />\n        <BabyBottleModal />\n        <DiaperModal />\n      </div>\n      <div>\n        <ActivityTable />\n      </div>\n    </div>\n  );\n}","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { babyBottleReducer } from '../features';\nimport {breastFeedReducer} from '../features/breastFeed/breastFeedSlice';\nimport {diaperReducer} from '../features/diaper/diaperSlice';\n\nexport const store = configureStore({\n  reducer: {\n    babyBottle: babyBottleReducer,\n    breastFeed: breastFeedReducer,\n    diaper: diaperReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { getAllBabyBottleData, getAllBreastFeedData, getAllDiapersData, initDb } from './utils';\nimport { babyBottleActions, breastFeedActions, DiaperActions } from './features';\n\ninitDb().then(() => {\n  Promise.all([getAllBabyBottleData(), getAllBreastFeedData(), getAllDiapersData()]).then(([babyBottleData, breastFeedData, allDiapersData]) => {\n    console.log(babyBottleData, breastFeedData, allDiapersData);\n    store.dispatch(babyBottleActions.loadData(arrayToObject(babyBottleData, 'start')));\n    store.dispatch(breastFeedActions.loadData(arrayToObject(breastFeedData, 'start')));\n    store.dispatch(DiaperActions.loadData(arrayToObject(allDiapersData, 'time')));\n  });\n});\n\nfunction arrayToObject(array: any[], key: string) {\n  const obj: any = {};\n  array.forEach((el: any) => {\n    obj[el[key]] = el;\n  })\n  return obj;\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}