{"version":3,"sources":["interfaces/breastFeed.interfaces.ts","utils/date.utils.ts","utils/db.utils.ts","features/breastFeed/breastFeedSlice.ts","components/breastFeed/BreastFeedModal.tsx","interfaces/diaper.interfaces.ts","features/diaper/diaperSlice.ts","features/babyBottle/babyBottleSlice.ts","components/diaper/DiaperModal.tsx","components/babyBottle/BabyBottleModal.tsx","components/manual/ManualModal.tsx","components/activityTable/activityTable.tsx","components/data/ImportModal.tsx","components/data/ExportModal.tsx","components/summaryChart/SummaryChart.tsx","utils/download.utils.ts","interfaces/babyBottle.interface.ts","App.tsx","app/store.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["RIGHT","LEFT","formatDate","date","withTime","d","Date","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","length","dayString","join","formatDate2","formatDuration","duration","Math","floor","timeToString","time","formattedTime","toString","MONTHS","getInputFormattedTime","timeInSeconds","useTime","defaultTime","db","BreastFeedStatus","ObjectStore","BREAST_FEED","DIAPERS","BABY_BOTTLE","a","openDB","upgrade","database","oldVersion","newVersion","transaction","diaperStore","objectStore","getAll","diapersData","newData","map","data","start","deleteObjectStore","createObjectStore","keyPath","putManyDiaperData","put","Promise","all","Object","values","store","done","key","delete","getAllBreastFeedData","getAllBabyBottleData","getAllDiapersData","initialState","status","IDLE","lastStart","undefined","updateStorage","putBreastFeedData","breastFeedSlice","createSlice","name","reducers","startRightBreastFeeding","state","FEEDING_R","round","now","startLeftBreastFeeding","FEEDING_L","stopBreastFeeding","action","previousStatus","payload","breastFeedData","type","loadData","addBreastFeedData","removeBreastFeedData","deleteBreastFeedData","importBreastFeedData","putManyBreastFeedData","breastFeedActions","actions","breastFeedReducer","reducer","BreastFeedModalBase","props","getDuration","getNowTime","startTime","realMinutes","realSeconds","hoursString","getFormattedTime","minutesString","secondsString","openModal","clearInterval","timeout","setInterval","forceUpdate","setState","open","refreshInterval","saveData","closeModal","event","reason","num","this","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogActions","autoFocus","Component","mapDispatch","BreastFeedModal","connect","connector","PEE","STOOL","putDiapersData","diaperSlice","logPeeDiaper","diaperData","logStollDiaper","addDiaperData","removeDiaperData","deleteDiapersData","importDiaperData","forEach","migrateTimeToStartKey","BabyBottleStatus","DiaperActions","diaperReducer","DiaperModalBase","logPee","logStool","DiaperModal","putBabyBottleData","babyBottleSlice","startBabyBottle","FEEDING","stopBabyBottle","babyBottleData","quantity","addBabyBottleData","removeBabyBottleData","deleteBabyBottleData","importBabyBottleData","putManyBabyBottleData","babyBottleActions","babyBottleReducer","LOCAL_STORAGE_KEY","BabyBottleModalBase","handleChange","evt","Number","target","value","NaN","localStorage","setItem","saveQuantity","getItem","FormControl","Input","onChange","endAdornment","InputAdornment","position","FormHelperText","BabyBottleModal","ManualModalMode","ManualModalBase","quantityRef","createRef","startTimeRef","endTimeRef","getDefaultValues","defaultDate","startDefault","endDefault","quantityDefault","mode","endTime","current","getTime","isBreast","isBabyBottle","isDiaper","iconButton","IconButton","modalTitle","InputLabel","Select","disabled","MenuItem","inputRef","defaultValue","inputProps","step","ManualModal","STORAGE_KEY","TablePagination","ActivityTableBase","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","size","getData","max","min","SelectProps","MenuProps","anchorOrigin","vertical","horizontal","getContentAnchorEl","rowsPerPageOptions","component","count","labelRowsPerPage","labelDisplayedRows","paginationInfo","from","to","onChangePage","onChangeRowsPerPage","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","renderRows","prevProps","prevState","babyBottle","breastFeed","diaper","allData","sort","b","aScore","i","push","slice","renderDiaperRow","renderBabyBottleRow","renderBreastFeedRow","fontSize","PureComponent","ActivityTable","ImportModalBase","textFieldRef","onTypeChange","input","updateState","file","document","getElementById","files","reader","FileReader","readAsText","isImporting","onload","result","updateData","onerror","jsonObject","JSON","parse","e","disableUnderline","id","TextField","placeholder","multiline","ImportModal","ExportDuration","DAY","Mode","ExportModalBase","download","fileName","dataStr","encodeURIComponent","stringify","dlAnchorElem","setAttribute","click","onDurationChange","getExportContent","YEAR","MONTH","WEEK","filter","copyToClipboard","copyText","select","setSelectionRange","execCommand","ALL","rowsMax","readOnly","end","ExportModal","BABY_BOTTLE_TYPE","Chart","register","registerables","SummaryChartBase","feedContainerRef","diaperContainerRef","activeContainerRef","feedChart","diaperChart","activeChart","getBabyBottleData","extractData","getBreastFeedData","getRightBreastFeedData","getLeftBreastFeedData","getDiapersPeeData","getDiapersStoolData","getActiveTime","getPeriodThreshold","nbDays","results","startDate","endDate","startKey","endKey","startHour","endHour","updateResults","dayKey","hour","hourArray","Array","fill","labels","getActivePercentage","types","getCurrentValue","nbDecimals","roundingFactor","pow","reduce","previousValue","currentValue","includes","WEEKS","getWeeksThreshold","getDayThreshold","getMonthThreshold","realDate","onModeChange","newMode","getDefaultDate","onStartDateChange","nextDate","updateDate","previousDate","operation","factor","today","currentData","rightBreastData","leftBreastData","datasets","yAxisID","label","backgroundColor","options","scales","breastFeedAxis","aspectRatio","plugins","legend","maxHeight","peeData","stoolData","activeData","activeLabels","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","update","r","nextMonth","nextYear","updateCharts","style","padding","minWidth","margin","ref","newDate","SummaryChart","babyData","App","useState","HISTORY","setMode","className","Typography","align","Grid","container","alignItems","justify","spacing","item","Switch","checked","STATS","display","configureStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","indexedDB","arrayToObject","array","obj","el","setTimeout","initDb","allDiapersData","dispatch","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f48c1dcc.chunk.js","sourcesContent":["import { FeedData } from \"./feed.interface\";\n\nexport const RIGHT = 'r';\nexport const LEFT = 'l';\n\nexport type BreastFeedType = typeof RIGHT | typeof LEFT;\n\nexport interface BreastFeedData extends FeedData {\n    type: BreastFeedType\n}","export function formatDate(date: number | string, withTime: boolean = true) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear(),\n        hours = '' + d.getHours(),\n        minutes = '' + d.getMinutes(),\n        seconds = '' + d.getSeconds();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n    if (hours.length < 2) hours = '0' + hours;\n    if (minutes.length < 2) minutes = '0' + minutes;\n    if (seconds.length < 2) seconds = '0' + seconds;\n\n    const dayString = [year, month, day].join('-');\n    return dayString + (withTime ? ` ${hours}:${minutes}:${seconds}` : '');\n}\n\nexport function formatDate2(date: number | string, withTime: boolean = true) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear() - 2000,\n        hours = '' + d.getHours(),\n        minutes = '' + d.getMinutes(),\n        seconds = '' + d.getSeconds();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n    if (hours.length < 2) hours = '0' + hours;\n    if (minutes.length < 2) minutes = '0' + minutes;\n    if (seconds.length < 2) seconds = '0' + seconds;\n\n    const dayString = [day, month, year].join('/');\n    return (withTime ? `${hours}:${minutes}:${seconds} ` : '') + dayString;\n}\n\nexport function formatDuration(duration: number) {\n    let seconds = duration;\n    let minutes = Math.floor(seconds / 60);\n    let hours = Math.floor(minutes / 60);\n    seconds -= minutes * 60;\n    minutes -= hours * 60;\n    return `${timeToString(hours)}:${timeToString(minutes)}:${timeToString(seconds)}`\n}\n\nfunction timeToString(time: number) {\n    let formattedTime = time.toString();\n    if (formattedTime.length < 2) formattedTime = '0' + formattedTime;\n    return formattedTime;\n}\n\nexport function getDateFromString(date: string) {\n    const [dateString, timeString] = date.split(' ');\n    const [year, month, day] = dateString.split('-');\n    const [hours, minutes, seconds] = timeString.split(':');\n    return new Date(+year, +month, +day, +hours, +minutes, +seconds);\n}\n\nexport const MONTHS = ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Aout', 'Sept', 'Oct', 'Nov', 'Dec'];\nexport const WEEKDAYS = ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'];\n\nexport function getDaysOfMonth(year: number, month: number) {\n    const nbDays = new Date(year, month, 0).getDate();\n    const dateArray: string[] = [];\n    for (let d = 0; d < nbDays; d++) {\n        dateArray.push((d+1).toString());\n    }\n    return dateArray;\n}\n\nexport function getInputFormattedTime(timeInSeconds: number, useTime: boolean = true) {\n    const date = new Date(timeInSeconds * 1000);\n    let month = (date.getMonth() + 1).toString();\n    if (month.length < 2) {\n        month = '0' + month;\n    }\n    let day = date.getDate().toString();\n    if (day.length < 2) {\n        day = '0' + day;\n    }\n    let hours = date.getHours().toString();\n    if (hours.length < 2) {\n        hours = '0' + hours;\n    }\n    let minutes = date.getMinutes().toString();\n    if (minutes.length < 2) {\n        minutes = '0' + minutes;\n    }\n    let seconds = date.getSeconds().toString();\n    if (seconds.length < 2) {\n        seconds = '0' + seconds;\n    }\n\n    if (!useTime) {\n        return `${date.getFullYear()}-${month}-${day}`;\n    }\n\n    const defaultTime = `${date.getFullYear()}-${month}-${day}T${hours}:${minutes}:${seconds}`;\n    return defaultTime;\n}","import { openDB, deleteDB, IDBPDatabase, IDBPTransaction, StoreNames } from 'idb';\nimport { BreastFeedData, DiaperData } from '../interfaces';\nimport { BabyBottleData } from '../interfaces/babyBottle.interface';\n\nlet db: IDBPDatabase;\n\nexport const ObjectStore = {\n    BREAST_FEED: 'breastFeed',\n    DIAPERS: 'diapers',\n    BABY_BOTTLE: 'babyBottle'\n}\n\nexport async function initDb() {\n    db = await openDB('maternity', 2, {\n        upgrade: async (database: IDBPDatabase, oldVersion: number, newVersion: number | null, transaction: IDBPTransaction<any, StoreNames<any>[], 'versionchange'>) => {\n            if (oldVersion === 1 && newVersion === 2) {\n                const diaperStore = transaction.objectStore(ObjectStore.DIAPERS);\n                const diapersData = await diaperStore.getAll();\n                const newData = diapersData.map((data) => {\n                    data.start = data.time;\n                    delete data.time;\n                    return data;\n                });\n                await database.deleteObjectStore(ObjectStore.DIAPERS);\n                const objectStore = await database.createObjectStore(ObjectStore.DIAPERS, {keyPath: 'start'});\n                await putManyDiaperData(newData, objectStore);\n                \n            } else {\n                database.createObjectStore(ObjectStore.BREAST_FEED, {keyPath: 'start'});\n                database.createObjectStore(ObjectStore.DIAPERS, {keyPath: 'start'});\n                database.createObjectStore(ObjectStore.BABY_BOTTLE, {keyPath: 'start'});\n            }\n        }\n    });\n    return db;\n}\n\nexport async function putBreastFeedData(data: BreastFeedData) {\n    db.put(ObjectStore.BREAST_FEED, data);\n}\n\nexport async function putDiapersData(data: DiaperData) {\n    db.put(ObjectStore.DIAPERS, data);\n}\n\nexport async function putBabyBottleData(data: BabyBottleData) {\n    db.put(ObjectStore.BABY_BOTTLE, data);\n}\n\nexport async function putManyBabyBottleData(data: {[key:number] :BabyBottleData}) {\n    const transaction = db.transaction(ObjectStore.BABY_BOTTLE, 'readwrite');\n\n    return await Promise.all([...Object.values(data).map((d) => {\n        return transaction.store.put(d);\n    }), transaction.done] as Promise<any>[]);\n}\n\nexport async function putManyDiaperData(data:  {[key:number] :DiaperData}, objectStore?: any) {\n\n    if (objectStore) {\n        return await Promise.all([...Object.values(data).map((d) => {\n            return objectStore.put(d);\n        })] as Promise<any>[]);\n    } else {\n        const transaction = db.transaction(ObjectStore.DIAPERS, 'readwrite');\n\n        return await Promise.all([...Object.values(data).map((d) => {\n            return transaction.store.put(d);\n        }), transaction.done] as Promise<any>[]);\n    }\n\n}\n\nexport async function putManyBreastFeedData(data:  {[key:number] :BreastFeedData}) {\n    const transaction = db.transaction(ObjectStore.BREAST_FEED, 'readwrite');\n\n    return await Promise.all([...Object.values(data).map((d) => {\n        return transaction.store.put(d);\n    }), transaction.done] as Promise<any>[]);\n}\n\n\nexport async function deleteBreastFeedData(key: number) {\n    db.delete(ObjectStore.BREAST_FEED, key);\n}\n\nexport async function deleteDiapersData(key: number) {\n    db.delete(ObjectStore.DIAPERS, key);\n}\n\nexport async function deleteBabyBottleData(key: number) {\n    db.delete(ObjectStore.BABY_BOTTLE, key);\n}\n\nexport async function getAllBreastFeedData(): Promise<BreastFeedData[]> {\n    return db.getAll(ObjectStore.BREAST_FEED);\n}\n\nexport async function getAllBabyBottleData(): Promise<BabyBottleData[]> {\n    return db.getAll(ObjectStore.BABY_BOTTLE);\n}\n\nexport async function getAllDiapersData(): Promise<DiaperData[]> {\n    return db.getAll(ObjectStore.DIAPERS)\n}\n\nexport async function resetData() {\n    Object.values(ObjectStore).forEach((storeKey: string) => {\n        resetObjectStore(storeKey);\n    });\n}\n\nexport async function resetObjectStore(storeKey: string) {\n    db.deleteObjectStore(storeKey);\n    db.createObjectStore(storeKey);\n}","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {BreastFeedData, BreastFeedType, LEFT, RIGHT} from '../../interfaces/breastFeed.interfaces';\nimport { deleteBreastFeedData, putBreastFeedData, putManyBreastFeedData } from '../../utils';\n\nexport enum BreastFeedStatus {\n  IDLE, FEEDING_R, FEEDING_L\n}\n\nexport interface BreastFeedState {\n  data: {[start: number]: BreastFeedData};\n  status: BreastFeedStatus;\n  lastStart: number | undefined;\n}\n\nconst initialState: BreastFeedState = {\n  data: {},\n  status: BreastFeedStatus.IDLE,\n  lastStart: undefined\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\n// export const incrementAsync = createAsyncThunk(\n//   'counter/fetchCount',\n//   async (amount: number) => {\n//     const response = await fetchCount(amount);\n//     // The value we return becomes the `fulfilled` action payload\n//     return response.data;\n//   }\n// );\n\nfunction updateStorage(data: BreastFeedData) {\n  putBreastFeedData(data);\n}\n\nexport const breastFeedSlice = createSlice({\n  name: 'breastFeed',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    startRightBreastFeeding: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.status = BreastFeedStatus.FEEDING_R;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    startLeftBreastFeeding: (state) => {\n      state.status = BreastFeedStatus.FEEDING_L;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    stopBreastFeeding: (state, action: PayloadAction<number | undefined>) => {\n      const previousStatus = state.status;\n      const start = state.lastStart;\n      if (start !== undefined && previousStatus !== BreastFeedStatus.IDLE && action.payload !== undefined) {\n        const duration = action.payload;\n        const breastFeedData: BreastFeedData = {\n          start,\n          duration,\n          type: previousStatus === BreastFeedStatus.FEEDING_R ? RIGHT : LEFT\n        };\n        state.data = {...state.data, [start]: breastFeedData};\n        updateStorage(breastFeedData);\n      }\n\n      state.status = BreastFeedStatus.IDLE;\n      state.lastStart = undefined;\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: BreastFeedData}>) => {\n      state.data = action.payload;\n    },\n    addBreastFeedData: (state, action: PayloadAction<BreastFeedData>) => {\n      state.data = {...state.data, [action.payload.start]: action.payload};\n      updateStorage(action.payload);\n    },\n    removeBreastFeedData: (state, action: PayloadAction<number>) => {\n      delete state.data[action.payload];\n      deleteBreastFeedData(action.payload);\n    },\n    importBreastFeedData: (state, action: PayloadAction<{[start: number]: BreastFeedData}>) => {\n      state.data = {...state.data, ...action.payload};\n      putManyBreastFeedData(action.payload);\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    // incrementByAmount: (state, action: PayloadAction<number>) => {\n    //   state.value += action.payload;\n    // },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(incrementAsync.pending, (state) => {\n  //       state.status = 'loading';\n  //     })\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\n  //       state.status = 'idle';\n  //       state.value += action.payload;\n  //     });\n  // },\n});\n\nexport const breastFeedActions = breastFeedSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n// export const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount: number): AppThunk => (\n//   dispatch,\n//   getState\n// ) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport const breastFeedReducer = breastFeedSlice.reducer;\n","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { breastFeedActions } from \"../../features/breastFeed/breastFeedSlice\";\nimport { BreastFeedType, RIGHT } from \"../../interfaces/breastFeed.interfaces\";\n\ninterface Props extends PropsFromRedux {\n    type: BreastFeedType\n}\n\ninterface State {\n    startTime: number;\n    open: boolean;\n    refreshInterval: any;\n}\n\nclass BreastFeedModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, startTime: 0, refreshInterval: undefined};\n    }\n\n    public render() {\n        const type = this.props.type === RIGHT ? 'droit' : 'gauche';\n        return <>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.openModal}>\n            Sein {type}\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Sein {type}\n            </DialogTitle>\n            <DialogContent>\n                {this.getDuration()}\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                Fini!\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private getDuration = () => {\n        const duration = this.getNowTime() - this.state.startTime;\n        const minutes =  Math.floor(duration / 60);\n        const hours = Math.floor(minutes / 60);\n\n        const realMinutes = minutes - hours * 60;\n        const realSeconds = duration - minutes * 60;\n        \n        const hoursString = this.getFormattedTime(hours);\n        const minutesString = this.getFormattedTime(realMinutes);\n        const secondsString = this.getFormattedTime(realSeconds);\n        return `${hoursString}:${minutesString}:${secondsString}`;\n    }\n\n    private openModal = () => {\n        this.clearInterval();\n        const timeout = setInterval(() => {\n            this.forceUpdate();\n        }, 1000);\n        this.setState({open: true, startTime: this.getNowTime(), refreshInterval: timeout});\n        if (this.props.type === RIGHT) {\n            this.props.startRightBreastFeeding();\n        } else {\n            this.props.startLeftBreastFeeding();\n        }\n    }\n\n    private clearInterval = () => {\n        if (this.state.refreshInterval !== undefined) {\n            clearInterval(this.state.refreshInterval);\n        }\n    }\n\n    private saveData = () => {\n        this.clearInterval();\n        const now = this.getNowTime();\n        this.props.stopBreastFeeding(now - this.state.startTime);\n        this.setState({open: false, refreshInterval: undefined});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        if (reason && reason === 'backdropClick') {\n            return;\n        }\n        this.clearInterval();\n        this.setState({open: false, refreshInterval: undefined});\n        this.props.stopBreastFeeding(undefined);\n    }\n\n    private getNowTime = () => {\n        return Math.round(Date.now() / 1000);\n    }\n\n    private getFormattedTime = (num: number) => {\n        return num < 10 ? `0${num}` : num;\n    }\n}\n\nconst mapDispatch = breastFeedActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const BreastFeedModal = connector(BreastFeedModalBase);","import { CommonData } from \"./common.interface\";\n\nexport const PEE = 'p';\nexport const STOOL = 's';\n\nexport type DiaperType = typeof PEE | typeof STOOL;\n\nexport interface DiaperData extends CommonData {\n    type: DiaperType\n}","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {DiaperData, PEE, STOOL} from '../../interfaces/diaper.interfaces';\nimport { deleteDiapersData, putDiapersData, putManyDiaperData } from '../../utils';\n\nexport interface DiaperState {\n  data: {[start: number]: DiaperData};\n}\n\nconst initialState: DiaperState = {\n  data: {},\n};\n\nfunction updateStorage(data: DiaperData) {\n  putDiapersData(data);\n}\n\nexport const diaperSlice = createSlice({\n  name: 'Diaper',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    logPeeDiaper: (state) => {\n      const start = Math.round(Date.now() / 1000);\n      const diaperData: DiaperData = {start, type: PEE};\n      state.data = {...state.data, [start]: diaperData};\n      updateStorage(diaperData);\n    },\n    logStollDiaper: (state) => {\n        const start = Math.round(Date.now() / 1000);\n        const diaperData: DiaperData = {start, type: STOOL};\n        state.data = {...state.data, [start]: diaperData};\n        updateStorage(diaperData);\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: DiaperData}>) => {\n      state.data = action.payload;\n    },\n    addDiaperData: (state, action: PayloadAction<DiaperData>) => {\n      state.data = {...state.data, [action.payload.start]: action.payload};\n      updateStorage(action.payload);\n    },\n    removeDiaperData: (state, action: PayloadAction<number>) => {\n      delete state.data[action.payload];\n      deleteDiapersData(action.payload);\n    },\n    importDiaperData: (state, action: PayloadAction<{[start: number]: DiaperData}>) => {\n      state.data = {...state.data, ...migrateTimeToStartKey(action.payload)};\n      putManyDiaperData(action.payload);\n    },\n  },\n});\n\nfunction migrateTimeToStartKey(data: {[start: number]: DiaperData}): any {\n  const newData: any = {};\n  Object.values(data).forEach((d: any) => {\n    if (d.time) {\n      d.start = d.time;\n      delete d.time;\n      newData[d.start] = d;\n    } else {\n      newData[d.start] = d;\n    }\n  })\n  return newData;\n}\n\nexport const DiaperActions = diaperSlice.actions;\n\nexport const diaperReducer = diaperSlice.reducer;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {BabyBottleData} from '../../interfaces/babyBottle.interface';\nimport { deleteBabyBottleData, putBabyBottleData, putManyBabyBottleData } from '../../utils';\n\nexport enum BabyBottleStatus {\n  IDLE, FEEDING\n}\n\nexport interface BabyBottleState {\n  data: {[start: number]: BabyBottleData};\n  status: BabyBottleStatus;\n  lastStart: number | undefined;\n}\n\nconst initialState: BabyBottleState = {\n  data: {},\n  status: BabyBottleStatus.IDLE,\n  lastStart: undefined\n};\n\nfunction updateStorage(data: BabyBottleData) {\n  putBabyBottleData(data);\n}\n\nexport const babyBottleSlice = createSlice({\n  name: 'babyBottle',\n  initialState,\n  reducers: {\n    startBabyBottle: (state) => {\n      state.status = BabyBottleStatus.FEEDING;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    stopBabyBottle: (state, action: PayloadAction<{duration: number, quantity: number} | undefined>) => {\n      const previousStatus = state.status;\n      const start = state.lastStart;\n      if (start !== undefined && previousStatus !== BabyBottleStatus.IDLE && action.payload !== undefined) {\n        const {duration, quantity} = action.payload;\n        const babyBottleData: BabyBottleData = {\n          start,\n          duration,\n          quantity\n        };\n        state.data = {...state.data, [start]: babyBottleData};\n        updateStorage(babyBottleData);\n      }\n\n      state.status = BabyBottleStatus.IDLE;\n      state.lastStart = undefined;\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: BabyBottleData}>) => {\n      state.data = action.payload;\n    },\n    addBabyBottleData: (state, action: PayloadAction<BabyBottleData>) => {\n      state.data = {...state.data, [action.payload.start]: action.payload};\n      updateStorage(action.payload);\n    },\n    removeBabyBottleData: (state, action: PayloadAction<number>) => {\n      delete state.data[action.payload];\n      deleteBabyBottleData(action.payload);\n    },\n    importBabyBottleData: (state, action: PayloadAction<{[start: number]: BabyBottleData}>) => {\n      state.data = {...state.data, ...action.payload};\n      putManyBabyBottleData(action.payload);\n    },\n  },\n});\n\nexport const babyBottleActions = babyBottleSlice.actions;\n\nexport const babyBottleReducer = babyBottleSlice.reducer;\n","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { DiaperActions } from \"../../features/diaper/diaperSlice\";\n\ninterface Props extends PropsFromRedux {\n}\n\ninterface State {\n    open: boolean;\n}\n\nclass DiaperModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.openModal}>\n            Couche\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Couche\n            </DialogTitle>\n            <DialogActions>\n            <Button autoFocus onClick={this.logPee} variant=\"contained\" color=\"primary\">\n                Pipi\n            </Button>\n            <Button autoFocus onClick={this.logStool} variant=\"contained\" color=\"primary\">\n                Caca\n            </Button>\n            <Button autoFocus onClick={this.closeModal} variant=\"contained\" color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n\n    private logPee = () => {\n        this.props.logPeeDiaper();\n        this.closeModal();\n    }\n\n    private logStool = () => {\n        this.props.logStollDiaper();\n        this.closeModal();\n    }\n    \n    private closeModal = () => {\n        this.setState({open: false});\n    }\n}\n\nconst mapDispatch = DiaperActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const DiaperModal = connector(DiaperModalBase);","import React, { ChangeEvent, ChangeEventHandler, Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormHelperText, Input, InputAdornment } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { babyBottleActions } from \"../../features/babyBottle/babyBottleSlice\";\n\ninterface Props extends PropsFromRedux {\n}\n\nconst LOCAL_STORAGE_KEY = 'bottleQuantity';\n\nfunction saveQuantity(quantity: number): void {\n    localStorage.setItem(LOCAL_STORAGE_KEY, quantity.toString());\n}\n\nfunction getQuantity(): number {\n    return Number((localStorage.getItem(LOCAL_STORAGE_KEY) || '60'));\n}\n\ninterface State {\n    startTime: number;\n    open: boolean;\n    refreshInterval: any;\n    quantity: number;\n}\n\nclass BabyBottleModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, startTime: 0, refreshInterval: undefined, quantity: getQuantity()};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.openModal}>\n            Biberon\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Biberon\n            </DialogTitle>\n            <DialogContent>\n                <div>{this.getDuration()}</div>\n                <FormControl>\n                    <Input\n                        value={this.state.quantity}\n                        onChange={this.handleChange}\n                        endAdornment={<InputAdornment position=\"end\">mL</InputAdornment>}\n                        type='number'\n                    />\n                    <FormHelperText>Quantité</FormHelperText>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                Fini!\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private handleChange = (evt: ChangeEvent<HTMLInputElement|HTMLTextAreaElement>) => {\n        let quantity = Number(evt.target.value);\n        if (quantity === NaN) {\n            quantity = this.state.quantity;\n        }\n        this.setState({quantity});\n        saveQuantity(quantity);\n    }\n\n    private getDuration = () => {\n        const duration = this.getNowTime() - this.state.startTime;\n        const minutes =  Math.floor(duration / 60);\n        const hours = Math.floor(minutes / 60);\n\n        const realMinutes = minutes - hours * 60;\n        const realSeconds = duration - minutes * 60;\n        \n        const hoursString = this.getFormattedTime(hours);\n        const minutesString = this.getFormattedTime(realMinutes);\n        const secondsString = this.getFormattedTime(realSeconds);\n        return `${hoursString}:${minutesString}:${secondsString}`;\n    }\n\n    private openModal = () => {\n        this.clearInterval();\n        const timeout = setInterval(() => {\n            this.forceUpdate();\n        }, 1000);\n        this.setState({open: true, startTime: this.getNowTime(), refreshInterval: timeout});\n        this.props.startBabyBottle();\n    }\n\n    private clearInterval = () => {\n        if (this.state.refreshInterval !== undefined) {\n            clearInterval(this.state.refreshInterval);\n        }\n    }\n\n    private saveData = () => {\n        this.clearInterval();\n        const now = this.getNowTime();\n        this.props.stopBabyBottle({duration: now - this.state.startTime, quantity: this.state.quantity});\n        this.setState({open: false, refreshInterval: undefined});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        if (reason && reason === 'backdropClick') {\n            return;\n        }\n        this.clearInterval();\n        this.setState({open: false, refreshInterval: undefined});\n        this.props.stopBabyBottle(undefined);\n    }\n\n    private getNowTime = () => {\n        return Math.round(Date.now() / 1000);\n    }\n\n    private getFormattedTime = (num: number) => {\n        return num < 10 ? `0${num}` : num;\n    }\n}\n\nconst mapDispatch = babyBottleActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const BabyBottleModal = connector(BabyBottleModalBase);","import React, { ChangeEvent, ChangeEventHandler, Component, createRef, RefObject } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormHelperText, IconButton, Input, InputAdornment, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { babyBottleActions } from \"../../features/babyBottle/babyBottleSlice\";\nimport { breastFeedActions, DiaperActions } from \"../../features\";\nimport { createFalse } from \"typescript\";\nimport { BreastFeedData, DiaperData, LEFT, PEE, RIGHT, STOOL } from \"../../interfaces\";\nimport { BabyBottleData } from \"../../interfaces/babyBottle.interface\";\nimport { getInputFormattedTime } from \"../../utils\";\n\ninterface Props extends PropsFromRedux {\n    modalTitle: string,\n    mode?: string,\n    data?: BabyBottleData | BreastFeedData | DiaperData,\n    iconButton?: JSX.Element,\n}\n\nconst LOCAL_STORAGE_KEY = 'bottleQuantity';\n\nfunction getQuantity(): number {\n    return Number((localStorage.getItem(LOCAL_STORAGE_KEY) || '60'));\n}\n\nexport const ManualModalMode = {\n    BREAST_L: 'bl',\n    BREAST_R: 'br',\n    BABY_BOTTLE: 'bottle', \n    DIAPER_PEE: 'pee',\n    DIAPER_STOOL: 'stool'\n}\n\ninterface State {\n    mode: string,\n    open: boolean\n}\n\nclass ManualModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {mode: this.props.mode || ManualModalMode.BABY_BOTTLE, open: false};\n    }\n\n    private quantityRef: RefObject<HTMLInputElement> = createRef();\n    private startTimeRef: RefObject<HTMLInputElement> = createRef();\n    private endTimeRef: RefObject<HTMLInputElement> = createRef();\n\n    public render() {\n        const isBreast = this.state.mode === ManualModalMode.BREAST_R || this.state.mode === ManualModalMode.BREAST_L;\n        const isBabyBottle = this.state.mode === ManualModalMode.BABY_BOTTLE;\n        const isDiaper = this.state.mode === ManualModalMode.DIAPER_PEE || this.state.mode === ManualModalMode.DIAPER_STOOL;\n\n\n        const { startDefault, endDefault, quantityDefault } = this.getDefaultValues();\n\n        return <>\n        {this.props.iconButton ? \n        <IconButton onClick={this.openModal}>{this.props.iconButton}</IconButton>\n        :\n        <Button variant='contained' color=\"primary\" onClick={this.openModal}>\n        {this.props.modalTitle}\n    </Button>\n        }\n\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                {this.props.modalTitle}\n            </DialogTitle>\n            <DialogContent>\n            <FormControl>\n                <InputLabel>Type</InputLabel>\n                <Select\n                value={this.props.mode || this.state.mode}\n                onChange={this.handleChange}\n                disabled={!!this.props.mode}\n                >\n                <MenuItem value={ManualModalMode.BREAST_R}>Sein droit</MenuItem>\n                <MenuItem value={ManualModalMode.BREAST_L}>Sein gauche</MenuItem>\n                <MenuItem value={ManualModalMode.BABY_BOTTLE}>Biberon</MenuItem>\n                <MenuItem value={ManualModalMode.DIAPER_PEE}>Couche (Pipi)</MenuItem>\n                <MenuItem value={ManualModalMode.DIAPER_STOOL}>Couche (Caca)</MenuItem>\n                </Select>\n            </FormControl>\n                {isDiaper && <FormControl>\n                    <InputLabel>Moment</InputLabel>\n                    <Input\n                        inputRef={this.startTimeRef}\n                        type='datetime-local'\n                        defaultValue={startDefault}\n                        disabled={!!this.props.mode}\n                        inputProps={{\n                            step: 1,\n                          }}\n                    />\n                </FormControl>}\n                {(isBreast || isBabyBottle) && <><FormControl>\n                    <InputLabel>Début</InputLabel>\n                    <Input\n                        inputRef={this.startTimeRef}\n                        type='datetime-local'\n                        defaultValue={startDefault}\n                        disabled={!!this.props.mode}\n                        inputProps={{\n                            step: 1,\n                          }}\n                    />\n                </FormControl>\n                <FormControl>\n                <InputLabel>Fin</InputLabel>\n                    <Input\n                        inputRef={this.endTimeRef}\n                        type='datetime-local'\n                        defaultValue={endDefault}\n                        inputProps={{\n                            step: 1,\n                          }}\n                    />\n                </FormControl></>}\n                {isBabyBottle && <FormControl>\n                    <InputLabel>Quantité</InputLabel>\n                    <Input\n                        inputRef={this.quantityRef}\n                        defaultValue={quantityDefault}\n                        endAdornment={<InputAdornment position=\"end\">mL</InputAdornment>}\n                        type='number'\n                    />\n                </FormControl>\n                }\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                {this.props.modalTitle}\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private getDefaultValues = () => {\n        let defaultDate = getInputFormattedTime(Math.floor(Date.now() / 1000));\n        let startDefault = defaultDate, endDefault = defaultDate, quantityDefault = getQuantity();\n        if (this.props.mode) {\n            if (this.props.mode === ManualModalMode.BREAST_L || this.props.mode === ManualModalMode.BREAST_R) {\n                const data = this.props.data as BreastFeedData;\n                startDefault = getInputFormattedTime(data.start);\n                endDefault = getInputFormattedTime(data.start + data.duration);\n            } else if (this.props.mode === ManualModalMode.BABY_BOTTLE) {\n                const data = this.props.data as BabyBottleData;\n                startDefault = getInputFormattedTime(data.start);\n                endDefault = getInputFormattedTime(data.start + data.duration);\n                quantityDefault = data.quantity;\n            } else {\n                const data = this.props.data as DiaperData;\n                startDefault = getInputFormattedTime(data.start);\n            }\n        }\n\n        return {\n            startDefault,\n            endDefault,\n            quantityDefault\n        }\n    }\n\n    private handleChange = (evt: ChangeEvent<{ name?: string | undefined; value: unknown; }>) => {\n        let mode = evt.target.value as string;\n        this.setState({mode});\n    }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n\n    private saveData = () => {\n        let startTime: number, endTime: number = 0, quantity: number = 0;\n        startTime = new Date(this.startTimeRef.current!.value).getTime() / 1000;\n        if (this.endTimeRef.current) {\n            endTime = new Date(this.endTimeRef.current.value).getTime() / 1000;\n        }\n        if (this.quantityRef.current) {\n            quantity = Number(this.quantityRef.current.value);\n        }\n\n        switch(this.state.mode) {\n            case ManualModalMode.BABY_BOTTLE: {\n                this.props.addBabyBottleData({\n                    start: startTime,\n                    duration: (endTime - startTime),\n                    quantity: quantity\n                });\n                break;\n            }\n            case ManualModalMode.BREAST_L: {\n                this.props.addBreastFeedData({\n                    start: startTime,\n                    duration: (endTime - startTime),\n                    type: LEFT\n                });\n                break;\n\n            }\n            case ManualModalMode.BREAST_R: {\n                this.props.addBreastFeedData({\n                    start: startTime,\n                    duration: (endTime - startTime),\n                    type: RIGHT\n                });\n                break;\n\n            }\n            case ManualModalMode.DIAPER_PEE: {\n                this.props.addDiaperData({\n                    start: startTime,\n                    type: PEE\n                });\n                break;\n\n            }\n            case ManualModalMode.DIAPER_STOOL: {\n                this.props.addDiaperData({\n                    start: startTime,\n                    type: STOOL\n                });\n                break;\n            }\n        }\n        this.setState({open: false});\n    }\n    \n    private closeModal = () => {\n        this.setState({open: false});\n    }\n}\n\nconst mapDispatch = {...babyBottleActions, ...breastFeedActions, ...DiaperActions};\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ManualModal = connector(ManualModalBase);","import { Button, IconButton, LabelDisplayedRowsArgs, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\nimport { ChangeEvent, PureComponent } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { BreastFeedData, DiaperData, LEFT, PEE, STOOL } from \"../../interfaces\";\nimport { BabyBottleData } from \"../../interfaces/babyBottle.interface\";\nimport {formatDate, formatDuration} from '../../utils/date.utils';\nimport { ManualModal, ManualModalMode } from \"../manual/ManualModal\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { babyBottleActions, breastFeedActions, DiaperActions } from \"../../features\";\nimport { DataModel } from \"../../interfaces/data.interface\";\n\nconst DEFAULT_PAGE_SIZE: number = 10;\n\nconst TablePaginationAny: any = TablePagination;\n\nconst STORAGE_KEY: string = 'rowPerPage';\n\ninterface ActivityTableProps extends PropsFromRedux {\n\n}\n\ninterface ActivityTableState {\n    page: number,\n    rowsPerPage: number, \n    data: DataModel[][],\n    size: number\n}\n\nclass ActivityTableBase extends PureComponent<ActivityTableProps, ActivityTableState> {\n\n    constructor(props: ActivityTableProps) {\n        super(props);\n        this.state = {\n            page: 0,\n            rowsPerPage: localStorage.getItem(STORAGE_KEY) && Number(localStorage.getItem(STORAGE_KEY)) || DEFAULT_PAGE_SIZE,\n            data: [[]],\n            size: 0\n        }\n    }\n\n    public componentDidMount() {\n        const {data, size} = this.getData();\n        if (data.length > 0) {\n            this.setState({\n                data,\n                page: Math.max(0, Math.min(this.state.page, data.length - 1)),\n                size\n            })\n        }\n    }\n\n    public render() {\n        return <>\n        <TablePagination\n                SelectProps={{\n                    MenuProps:{\n                        anchorOrigin: {\n                        vertical: \"bottom\",\n                        horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                    }\n                }}\n\n                rowsPerPageOptions={[5, 10, 20, 50]}\n                component=\"div\"\n                count={this.state.size}\n                rowsPerPage={this.state.rowsPerPage}\n                page={this.state.page}\n                labelRowsPerPage='Entrées par page'\n                labelDisplayedRows={(paginationInfo: LabelDisplayedRowsArgs) => `${paginationInfo.from}-${paginationInfo.to} sur ${paginationInfo.count}`}\n                onChangePage={this.handleChangePage}\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            />\n        <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Durée</TableCell>\n              <TableCell>Qté</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.renderRows()}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      </>\n    }\n\n    private handleChangePage = (event: any, page: number) => {\n        this.setState({page});\n    }\n\n    private handleChangeRowsPerPage = (event : ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const value = Number(event.target?.value);\n        this.setState({\n            rowsPerPage: value\n        });\n        localStorage.setItem(STORAGE_KEY, value.toString());\n    }\n\n    public componentDidUpdate(prevProps: ActivityTableProps, prevState: ActivityTableState) {\n        if (prevProps.babyBottle !== this.props.babyBottle || prevProps.breastFeed !== this.props.breastFeed || prevProps.diaper !== this.props.diaper || prevState.rowsPerPage !== this.state.rowsPerPage) {\n            const {data, size} = this.getData();\n            this.setState({\n                data,\n                page: Math.max(0, Math.min(this.state.page, data.length - 1)),\n                size\n            })\n        }\n    }\n\n    private getData() {\n        const allData: any = [...Object.values(this.props.babyBottle), ...Object.values(this.props.breastFeed), ...Object.values(this.props.diaper)];\n        allData.sort((a: any, b: any) => {\n            const aScore = a.start;\n            const bScore = b.start;\n            return bScore - aScore;\n        });\n        const data: DataModel[][] = [];\n        for (let i = 0; i * this.state.rowsPerPage < allData.length; i++) {\n            data.push(allData.slice(i * this.state.rowsPerPage, Math.min((i + 1) * this.state.rowsPerPage, allData.length)));\n        }\n        if (data.length === 0) {\n            data.push([]);\n        }\n        return {data, size: allData.length};\n    }\n\n    renderRows() {\n        return this.state.data[this.state.page].map((d: any) => {\n            if (d.type === PEE || d.type === STOOL) {\n                return this.renderDiaperRow(d);\n            } else if (d.quantity) {\n                return this.renderBabyBottleRow(d);\n            } else {\n                return this.renderBreastFeedRow(d);\n            }\n        })\n    }\n\n    private renderBreastFeedRow(data: BreastFeedData) {\n        const mode = data.type === LEFT ? ManualModalMode.BREAST_L : ManualModalMode.BREAST_R;\n        const onDelete = () => {\n            this.props.removeBreastFeedData(data.start);\n        }\n        return <TableRow key={'breastFeed' + data.start}>\n            <TableCell key='start'>{formatDate(data.start * 1000)}</TableCell>\n            <TableCell key='label'>Sein {data.type === 'l' ? '(G)' : '(D)'}</TableCell>\n            <TableCell key='duration'>{formatDuration(data.duration)}</TableCell>\n            <TableCell key='quantity'></TableCell>\n            <TableCell key='actions'>\n                <ManualModal modalTitle='Modifier' iconButton={<EditIcon fontSize='small'/>} mode={mode} data={data} />\n                <IconButton color=\"secondary\" onClick={onDelete}><DeleteIcon fontSize='small'/></IconButton>    \n            </TableCell>\n        </TableRow>\n    }\n\n    private renderDiaperRow(data: DiaperData ) {\n        const onDelete = () => {\n            this.props.removeDiaperData(data.start);\n        }\n        return <TableRow key={'diaper' + data.start}>\n            <TableCell key='start'>{formatDate(data.start * 1000)}</TableCell>\n            <TableCell key='label'>Couche ({data.type === 'p' ? 'P' : 'C'})</TableCell>\n            <TableCell key='duration'></TableCell>\n            <TableCell key='quantity'></TableCell>\n            <TableCell key='actions'>\n                <IconButton color=\"secondary\" onClick={onDelete}><DeleteIcon fontSize='small'/></IconButton>\n            </TableCell>\n        </TableRow>\n    }\n\n    private renderBabyBottleRow(data: BabyBottleData) {\n        const onDelete = () => {\n            this.props.removeBabyBottleData(data.start);\n        }\n        return <TableRow key={'babyBottle' + data.start}>\n        <TableCell key='start'>{formatDate(data.start * 1000)}</TableCell>\n        <TableCell key='label'>Biberon</TableCell>\n        <TableCell key='duration'>{formatDuration(data.duration)}</TableCell>\n        <TableCell  key='quantity'>{data.quantity}</TableCell>\n        <TableCell  key='actions'>\n            <ManualModal modalTitle='Modifier' iconButton={<EditIcon fontSize='small'/>} mode={ManualModalMode.BABY_BOTTLE} data={data}/>\n            <IconButton color=\"secondary\" onClick={onDelete}><DeleteIcon fontSize='small' /></IconButton>\n        </TableCell>\n    </TableRow>\n    }\n}\n\nconst mapDispatch = {...babyBottleActions, ...breastFeedActions, ...DiaperActions};\n\nconst mapState = (state: RootState) => ({\n    babyBottle: state.babyBottle.data,\n    breastFeed: state.breastFeed.data,\n    diaper: state.diaper.data\n})\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ActivityTable = connector(ActivityTableBase);","import React, { ChangeEvent, Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Input, MenuItem, Select, TextField } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { breastFeedActions } from \"../../features/breastFeed/breastFeedSlice\";\nimport { RootState } from \"../../app/store\";\nimport { babyBottleActions, DiaperActions } from \"../../features\";\nimport { createRef } from \"react\";\n\ninterface Props extends PropsFromRedux {\n}\n\ninterface State {\n    open: boolean;\n    isImporting: boolean;\n    input: 'file' | 'input'\n}\n\nclass ImportModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, isImporting: false, input: 'file'};\n    }\n\n    private textFieldRef = createRef<HTMLTextAreaElement>();\n\n    public render() {\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Importer\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Importer\n            </DialogTitle>\n            <DialogContent>\n                <Select value={this.state.input} onChange={this.onTypeChange}>\n                    <MenuItem value='file'>Importer depuis un fichier json</MenuItem>\n                    <MenuItem value='input'>Importer depuis du texte</MenuItem>\n                </Select>\n                {this.state.input === 'file' ?\n                <FormControl>\n                <Input disableUnderline id='file-import' type='file'></Input>\n            </FormControl> :\n            <TextField inputRef={this.textFieldRef} placeholder='Entrer les données au format json. Exemple: {\"babyBottle\":{\"1626014654\":{\"start\":1626014654,\"duration\":1,\"quantity\":60}},\"diaper\":{\"1626014657\":{\"time\":1626014657,\"type\":\"p\"},\"1626014658\":{\"time\":1626014658,\"type\":\"s\"}},\"breastFeed\":{\"1626014649\":{\"start\":1626014649,\"duration\":2,\"type\":\"l\"},\"1626014651\":{\"start\":1626014651,\"duration\":2,\"type\":\"r\"}}}' multiline={true}>\n            </TextField>\n            }\n\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={this.updateState} disabled={this.state.isImporting} color=\"secondary\">\n                Importer\n            </Button>\n            <Button onClick={this.closeModal} color=\"secondary\">\n                Fermer\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private onTypeChange = (event: ChangeEvent<{name?: string, value: unknown}>) => {\n        this.setState({\n            input: event.target.value as 'file' | 'input'\n        })\n    }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        this.setState({open: false});\n    }\n\n    private updateState = () => {\n        const file = (document.getElementById(\"file-import\") as HTMLInputElement)?.files?.[0];\n        if (file && this.state.input === 'file') {\n            const reader = new FileReader();\n            reader.readAsText(file, \"UTF-8\");\n            this.setState({isImporting: true});\n            reader.onload = (evt: any) => {\n                const data = evt.target.result;\n                this.updateData(data);\n                this.setState({open: false, isImporting: false});\n            }\n            reader.onerror = (evt: any) => {\n                this.setState({\n                    isImporting: false\n                })\n            }\n        } else if (this.state.input === 'input') {\n            const value = this.textFieldRef.current?.value;\n            this.updateData(value);\n            this.setState({open: false});\n        }\n    }\n\n    private updateData = (value: string | undefined) => {\n        if (value) {\n            try {\n                const jsonObject: any = JSON.parse(value);\n                if (jsonObject.babyBottle) {\n                    this.props.importBabyBottleData(jsonObject.babyBottle);\n                }\n                if (jsonObject.diaper) {\n                    this.props.importDiaperData(jsonObject.diaper);\n                }\n                if (jsonObject.breastFeed) {\n                    this.props.importBreastFeedData(jsonObject.breastFeed);\n                }\n            } catch (e) {\n    \n            }\n        }\n    }\n}\n\nconst mapDispatch = {...babyBottleActions, ...breastFeedActions, ...DiaperActions};\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ImportModal = connector(ImportModalBase);","import React, { ChangeEvent, Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Select, TextField } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { breastFeedActions } from \"../../features/breastFeed/breastFeedSlice\";\nimport { RootState } from \"../../app/store\";\nimport { download } from \"../../utils/download.utils\";\nimport { DataModel } from \"../../interfaces/data.interface\";\nimport { CommonData } from \"../../interfaces/common.interface\";\n\ninterface Props extends PropsFromRedux {\n}\n\ninterface State {\n    open: boolean;\n    duration: ExportDuration\n}\n\nconst DAY = 24 * 60 * 60;\n\nenum ExportDuration {\n    ALL, DAY, WEEK, MONTH, YEAR \n}\n\nclass ExportModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, duration: ExportDuration.WEEK};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Exporter\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Exporter\n            </DialogTitle>\n            <DialogContent>\n                <Select value={this.state.duration} onChange={this.onDurationChange}>\n                    <MenuItem value={ExportDuration.ALL}>Tout</MenuItem>\n                    <MenuItem value={ExportDuration.YEAR}>Dernière année</MenuItem>\n                    <MenuItem value={ExportDuration.MONTH}>Dernier mois</MenuItem>\n                    <MenuItem value={ExportDuration.WEEK}>Dernière semaine</MenuItem>\n                    <MenuItem value={ExportDuration.DAY}>Dernier jour</MenuItem>\n                </Select>\n                <TextField multiline={true} rowsMax={10} id='content-to-export' inputProps={{\n                    readOnly: true,\n                    }}\n                value={this.getExportContent()}>\n                </TextField>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={this.download} color=\"secondary\">\n                Télécharger\n            </Button>\n            <Button onClick={this.copyToClipboard} color=\"secondary\">\n                Copier\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Fermer\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n    private download = () => {\n        download(this.props.state, `maternity-data-${Date.now()}`);\n    }\n\n    private onDurationChange = (event: ChangeEvent<{ name?: string | undefined; value: unknown; }>) => {\n        this.setState({duration: event.target.value as ExportDuration});\n    };\n\n    private getExportContent = () => {\n        const now = Date.now() / 1000;\n        let startTime: number = 0;\n        switch(this.state.duration) {\n            case ExportDuration.YEAR: {\n                startTime = now - 365 * DAY;\n                break;\n            }\n            case ExportDuration.MONTH: {\n                startTime = now - 31 * DAY;\n                break;\n            }\n            case ExportDuration.WEEK: {\n                startTime = now - 7 * DAY;\n                break;\n            }\n            case ExportDuration.DAY: {\n                startTime = now - DAY;\n                break;\n            }\n            default: {\n                return JSON.stringify(this.props.state);\n            }\n        }\n        return JSON.stringify({\n            babyBottle: this.filter(this.props.state.babyBottle, startTime, now),\n            diaper: this.filter(this.props.state.diaper, startTime, now),\n            breastFeed: this.filter(this.props.state.breastFeed, startTime, now),\n        })\n    }\n\n    private filter(data: {[key:number]: CommonData}, start: number, end: number) {\n        return Object.values(data).filter((d: CommonData) => {\n            return d.start > start && d.start < end;\n        });\n    }\n\n    private copyToClipboard = () => {\n        /* Get the text field */\n        var copyText: any = document.getElementById(\"content-to-export\");\n      \n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999999); /* For mobile devices */\n      \n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n      }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        this.setState({open: false});\n    }\n}\n\nconst mapState = (state: RootState) => {\n    return {\n        state: {\n            babyBottle: state.babyBottle.data,\n            diaper: state.diaper.data,\n            breastFeed: state.breastFeed.data\n        }\n    }\n}\n\nconst mapDispatch = breastFeedActions;\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ExportModal = connector(ExportModalBase);","import { Button, MenuItem } from \"@material-ui/core\";\nimport { FormControl, Input, InputLabel, Select } from \"@material-ui/core\";\nimport { Chart, registerables } from \"chart.js\";\nimport { ChangeEvent, createRef, PureComponent, RefObject } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from '../../app/store';\nimport { LEFT, PEE, RIGHT, STOOL } from \"../../interfaces\";\nimport { BABY_BOTTLE_TYPE } from \"../../interfaces/babyBottle.interface\";\nimport { DataModel } from \"../../interfaces/data.interface\";\nimport { formatDate2, getInputFormattedTime, MONTHS } from \"../../utils/date.utils\";\n\nChart.register(...registerables);\n\nenum Mode {\n    MONTHS, WEEKS, WEEK\n}\n\ninterface Props extends PropsFromRedux {\n\n}\n\ninterface State {\n    mode: Mode;\n    startDate: number,\n    currentData: DataModel[]\n}\n\n\n\n\nclass SummaryChartBase extends PureComponent<Props, State> {\n\n    private feedContainerRef: RefObject<HTMLCanvasElement> = createRef();\n    private diaperContainerRef: RefObject<HTMLCanvasElement> = createRef();\n    private activeContainerRef: RefObject<HTMLCanvasElement> = createRef();\n\n    private feedChart!: Chart;\n\n    private diaperChart!: Chart;\n\n    private activeChart!: Chart;\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            mode: Mode.WEEK,\n            startDate: Math.floor((Date.now() - 6 * 24 * 60 * 60 * 1000) / 1000),\n            currentData: []\n        }\n    }\n    \n\n    public componentDidMount() {\n        const {labels, data: babyBottleData} = this.getBabyBottleData();\n        const {data: breastFeedData} = this.getBreastFeedData();\n        const {data: rightBreastData} = this.getRightBreastFeedData();\n        const {data: leftBreastData} = this.getLeftBreastFeedData();\n        this.feedChart = new Chart(this.feedContainerRef.current!, {\n            type: 'bar',\n            data: {\n                labels,\n                datasets: [{\n                    yAxisID: 'babyBottleAxis',\n                    label: 'Biberon (mL)',\n                    data: babyBottleData,\n                    backgroundColor: 'lightblue'\n                },\n                {\n                    yAxisID: 'breastFeedAxis',\n                    label: 'Sein (min)',\n                    data: breastFeedData,\n                    backgroundColor: 'green'\n                },\n                {\n                    yAxisID: 'breastFeedAxis',\n                    label: 'Sein G (min)',\n                    data: leftBreastData,\n                    backgroundColor: 'lightgreen'\n                },\n                {\n                    yAxisID: 'breastFeedAxis',\n                    label: 'Sein D (min)',\n                    data: rightBreastData,\n                    backgroundColor: 'darkgreen'\n                }\n            ]\n            },\n            options: {\n                scales: {\n                    breastFeedAxis: {\n                        position: 'right',\n                      }\n                },\n                aspectRatio: 1.5,\n                plugins: {\n                    legend: {\n                        maxHeight: 50\n                    }\n                }\n            }\n        });\n\n        const {data: peeData} = this.getDiapersPeeData();\n        const {data: stoolData} = this.getDiapersStoolData();\n        this.diaperChart = new Chart(this.diaperContainerRef.current!, {\n            type: 'bar',\n            data: {\n                labels,\n                datasets: [{\n                    label: 'Pipi',\n                    data: peeData,\n                    backgroundColor: 'lightblue'\n                },\n                {\n                    label: 'Caca',\n                    data: stoolData,\n                    backgroundColor: 'orange'\n                }\n            ]\n            },\n            options: {\n                aspectRatio: 1.5\n            }\n        });\n\n        const {data: activeData, labels: activeLabels} = this.getActiveTime();\n        this.activeChart = new Chart(this.activeContainerRef.current!,  {\n            type: 'radar',\n            data: {\n                labels: activeLabels,\n                datasets: [{\n                    label: 'Heures actives (% sur la période)',\n                    data: activeData,\n                    fill: true,\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    pointBackgroundColor: 'rgb(255, 99, 132)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgb(255, 99, 132)'\n                    }\n                ]\n\n            }\n        })\n    }\n\n    private updateCharts() {\n        const {labels, data: babyBottleData} = this.getBabyBottleData();\n        const {data: breastFeedData} = this.getBreastFeedData();\n        const {data: rightBreastData} = this.getRightBreastFeedData();\n        const {data: leftBreastData} = this.getLeftBreastFeedData();\n        this.feedChart.data = {\n                labels,\n                datasets: [{\n                    yAxisID: 'babyBottleAxis',\n                    label: 'Biberon (mL)',\n                    data: babyBottleData,\n                    backgroundColor: 'lightblue'\n                },\n                {\n                    yAxisID: 'breastFeedAxis',\n                    label: 'Sein (min)',\n                    data: breastFeedData,\n                    backgroundColor: 'green'\n                },\n                {\n                    yAxisID: 'breastFeedAxis',\n                    label: 'Sein G (min)',\n                    data: leftBreastData,\n                    backgroundColor: 'lightgreen'\n                },\n                {\n                    yAxisID: 'breastFeedAxis',\n                    label: 'Sein D (min)',\n                    data: rightBreastData,\n                    backgroundColor: 'darkgreen'\n                }\n            ]\n            };\n\n        const {data: peeData} = this.getDiapersPeeData();\n        const {data: stoolData} = this.getDiapersStoolData();\n        this.diaperChart.data = {\n                labels,\n                datasets: [{\n                    label: 'Pipi',\n                    data: peeData,\n                    backgroundColor: 'lightblue'\n                },\n                {\n                    label: 'Caca',\n                    data: stoolData,\n                    backgroundColor: 'orange'\n                }\n            ]\n            };\n\n        const {data: activeData, labels: activeLabels} = this.getActiveTime();\n        this.activeChart.data = {\n                labels: activeLabels,\n                datasets: [{\n                    label: 'Heures actives (% sur la période)',\n                    data: activeData,\n                    fill: true,\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    pointBackgroundColor: 'rgb(255, 99, 132)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgb(255, 99, 132)'\n                    }\n                ]\n        };\n\n        this.feedChart.update();\n        this.diaperChart.update();\n        this.activeChart.update();\n    }\n\n    private getBabyBottleData = () => {\n        return this.extractData([BABY_BOTTLE_TYPE], (d: DataModel) => {\n            return d.quantity!\n        }, 1);\n    }\n\n    private getBreastFeedData = () => {\n        return this.extractData([LEFT, RIGHT], (d: DataModel) => {\n            return Math.round(d.duration! / 60);\n        });\n    }\n\n    private getRightBreastFeedData = () => {\n        return this.extractData([RIGHT], (d: DataModel) => {\n            return Math.round(d.duration! / 60);\n        });\n    }\n\n\n    private getLeftBreastFeedData = () => {\n        return this.extractData([LEFT], (d: DataModel) => {\n            return Math.round(d.duration! / 60);\n        });\n    }\n\n    private getDiapersPeeData = () => {\n        return this.extractData([PEE], (d: DataModel) => {\n            return 1\n        }, 1);\n    }\n\n    private getDiapersStoolData = () => {\n        return this.extractData([STOOL], (d: DataModel) => {\n            return 1\n        }, 1);\n    }\n\n    private getActiveTime = () => {\n        let {start, end} = this.getPeriodThreshold();\n        end = Math.min(end, Math.round(Date.now() / 1000));\n        const nbDays = Math.round((end - start) / 24 / 60 / 60);\n        const data = this.props.data.filter((d) => d.start >= start && d.start < end);\n        const results: {[date: string]: Array<boolean>} = {};\n        data.forEach((d) => {\n            const start = d.start;\n            const end = d.start + (d.duration || 0);\n            const startDate = new Date(start * 1000);\n            const endDate = new Date(end * 1000);\n            const startKey = formatDate2(start * 1000, false);\n            const endKey = formatDate2(end * 1000, false);\n            const startHour = startDate.getHours();\n            const endHour = endDate.getHours();\n            const updateResults = (dayKey: string, hour: number) => {\n                let hourArray = results[dayKey];\n                if (!hourArray) {\n                    hourArray = new Array(24).fill(false);\n                    results[dayKey] = hourArray;\n                }\n                hourArray[hour] = true;\n            }\n            if (endHour < startHour) {\n                for (let i = startHour; i < 24; i++) {\n                    updateResults(startKey, i);\n                }\n                for (let i = 0; i <= endHour; i++) {\n                    updateResults(endKey, i);\n                }\n            } else {\n                for (let i = startHour; i <= endHour; i++) {\n                    updateResults(startKey, i);\n                }\n            }\n        });\n\n\n        const labels = [];\n        for (let i = 0; i < 24; i++) {\n            labels.push(i + 'h');\n        }\n        return {\n            labels,\n            data: this.getActivePercentage(nbDays, results)\n        };\n    }\n\n    private getActivePercentage(nbDays: number, results: {[date: string]: Array<boolean>}) {\n        const data: Array<number> = new Array(24).fill(0);\n        Object.values(results).forEach((r) => {\n            for (let i = 0; i < 24; i++) {\n                data[i] += (r[i] as any as number);\n            }\n        });\n        return data.map((d) => Math.round(d/nbDays * 100));\n    }\n\n    private getData = (start: number, end: number, types: string[], getCurrentValue: (d: DataModel) => number, nbDecimals: number) => {\n        const nbDays = Math.max(1, Math.round((Math.min(end, Math.round(Date.now() / 1000)) - start) / (24 * 60 * 60)));\n        const roundingFactor: number = Math.pow(10, nbDecimals);\n        return Math.round(this.props.data.reduce((previousValue: number, currentValue: DataModel) => {\n            const isValid = types.includes(currentValue.type) && start <= currentValue.start && end > currentValue.start;\n            return previousValue + (isValid ? getCurrentValue(currentValue) : 0);\n        }, 0) / nbDays * roundingFactor) / roundingFactor;\n    }\n\n    private extractData = (types: string[], getCurrentValue: (d: DataModel) => number, nbDecimals: number = 0) => {\n        const labels: any[] = [];\n        const data: number[] = [];\n        let date: number = this.state.startDate;\n        switch(this.state.mode) {\n            case Mode.WEEKS: {\n                for (let i = 0; i < 6; i++) {\n                    const {start, end} = this.getWeeksThreshold(date);\n                    const value = this.getData(start, end, types, getCurrentValue, nbDecimals);\n                    date = end;\n                    labels.push([`${formatDate2(start * 1000, false)}`,` à ${formatDate2(end * 1000, false)}`]);\n                    data.push(value);\n                }\n                break;\n            }\n            case Mode.WEEK: {\n                for (let i = 0; i < 8; i++) {\n                    const {start, end} = this.getDayThreshold(date);\n                    const value = this.getData(start, end, types, getCurrentValue, nbDecimals);\n                    date = end;\n                    labels.push(formatDate2(start * 1000, false));\n                    data.push(value);\n                }\n                break;\n            }\n            default: {\n                for (let i = 0; i < 13; i++) {\n                    const {start, end} = this.getMonthThreshold(date);\n                    const value = this.getData(start, end, types, getCurrentValue, nbDecimals);\n                    date = end;\n                    const realDate = new Date(start * 1000);\n                    labels.push(`${MONTHS[realDate.getMonth()]} ${realDate.getFullYear()}`);\n                    data.push(value);\n                }\n                break;\n            }\n        }\n        return {data, labels};\n    }\n\n    private getDayThreshold(time: number) {\n        const d = new Date(time * 1000);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate()).getTime() / 1000;\n        const end = start + 24 * 60 * 60;\n        return {start, end};\n    }\n\n    private getWeeksThreshold(time: number) {\n        const d = new Date(time * 1000);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate()).getTime() / 1000;\n        const end = start + 7 * 24 * 60 * 60;\n        return {start, end};\n    }\n\n\n    private getPeriodThreshold() {\n        const start = this.state.startDate;\n        let date = this.state.startDate;\n        switch(this.state.mode) {\n            case Mode.WEEKS: {\n                for (let i = 0; i < 6; i++) {\n                    date = this.getWeeksThreshold(date).end;\n                }\n                break;\n            }\n            case Mode.WEEK: {\n                for (let i = 0; i < 8; i++) {\n                    date = this.getDayThreshold(date).end;\n                }\n                break;\n            }\n            default: {\n                for (let i = 0; i < 13; i++) {\n                    date = this.getMonthThreshold(date).end;\n                }\n                break;\n            }\n        }\n        return {start, end: date};\n    }\n\n    private getMonthThreshold(time: number) {\n        const d = new Date(time * 1000);\n        const year = d.getFullYear();\n        const month = d.getMonth();\n        const nextMonth = (month + 1) % 12;\n        let nextYear = nextMonth ? year : year + 1;\n        const start = new Date(year, month).getTime() / 1000;\n        const end = new Date(nextYear, nextMonth).getTime() / 1000;\n        return {start, end};\n    }\n\n    public render() {\n        if (this.feedContainerRef.current && this.diaperContainerRef.current) {\n            this.updateCharts();\n        }\n        return <>\n            <div>\n                <FormControl>\n                    <Select value={this.state.mode} onChange={this.onModeChange} MenuProps={{\n            anchorOrigin: {\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            },\n            getContentAnchorEl: null\n          }}>\n                        <MenuItem value={Mode.MONTHS}>Mois</MenuItem>\n                        <MenuItem value={Mode.WEEKS}>Semaines</MenuItem>\n                        <MenuItem value={Mode.WEEK}>Jours</MenuItem>\n                    </Select>\n                </FormControl>\n                    <Button style={{\n                        padding: '0',\n                        minWidth: '20px'\n                    }} size='small' onClick={this.previousDate} variant='contained' color='primary'>{\"<\"}</Button>\n                    <Input\n                        style={{\n                            margin: '0 10px' \n                        }}\n                        type='date'\n                        value={getInputFormattedTime(this.state.startDate, false)}\n                        onChange={this.onStartDateChange}\n                    />\n                    <Button style={{\n                        padding: '0',\n                        minWidth: '20px'\n                    }}  size='small' onClick={this.nextDate} variant='contained' color='primary'>{\">\"}</Button>\n\n            </div>\n            <div>\n                <canvas ref={this.feedContainerRef} />\n                <canvas ref={this.diaperContainerRef} />\n                <canvas ref={this.activeContainerRef} />\n            </div>\n            </>;\n    }\n\n    private onModeChange = (event: ChangeEvent<{name?: string, value: unknown}>) => {\n        const newMode = event.target.value as Mode;\n        const defaultDate = this.getDefaultDate(newMode);\n        this.setState({\n            mode: newMode,\n            startDate: defaultDate});\n    }\n\n    private onStartDateChange = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const date = new Date(event.target.value);\n        this.setState({startDate: date.getTime() / 1000});\n    }\n\n    private nextDate = () => {\n        this.updateDate('+');\n    }\n\n    private previousDate = () => {\n        this.updateDate('-');\n    }\n\n    private updateDate(operation: '+' | '-') {\n        const newDate = this.getDefaultDate(this.state.mode, this.state.startDate, operation);\n        this.setState({startDate: newDate});\n    }\n\n    private getDefaultDate = (mode: Mode, date?: number, operation?: '+' | '-', ) => {\n        const factor = operation === '+' ? -1 : 1; \n        const today = date || Math.floor(Date.now() / 1000);\n        switch(mode) {\n            case Mode.MONTHS:{\n                return today - factor * 365 * 24 * 60 * 60;\n            }\n            case Mode.WEEKS: {\n                return today - factor * 5 * 7 * 24 * 60 * 60;\n            }\n            default: {\n                return today - factor * 7 * 24 * 60 * 60;\n            }\n        }\n    }\n}\n\nconst mapState = (state: RootState) => {\n    const babyBottleData: DataModel[] = Object.values(state.babyBottle.data).map((babyData => {\n        return {type: BABY_BOTTLE_TYPE, start: babyData.start, duration: babyData.duration, quantity: babyData.quantity };\n    }));\n    const breastFeedData: DataModel[]  = Object.values(state.breastFeed.data).map((data => {\n        return {type: data.type, start: data.start, duration: data.duration };\n    }));\n    const diaperData: DataModel[]  = Object.values(state.diaper.data).map((data => {\n        return {type: data.type, start: data.start };\n    }));\n    const data: DataModel[] = [...babyBottleData, ...breastFeedData, ...diaperData];\n    data.sort((a: DataModel, b: DataModel) => {\n        return b.start - a.start;\n    })\n\n    return {\n        data\n    };\n}\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const SummaryChart = connector(SummaryChartBase);","\nexport function download(jsonObject: any, fileName: string) {\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(jsonObject));\n    const dlAnchorElem = document.getElementById('downloadAnchorElem') as HTMLElement;\n    dlAnchorElem.setAttribute(\"href\",     dataStr     );\n    dlAnchorElem.setAttribute(\"download\", `${fileName}.json`);\n    dlAnchorElem.click();\n}\n","import { FeedData } from \"./feed.interface\";\n\nexport const BABY_BOTTLE_TYPE = 'babyBottle';\n\nexport interface BabyBottleData extends FeedData {\n    quantity: number\n}","import React from 'react';\nimport './App.css';\nimport {BreastFeedModal} from './components/breastFeed/BreastFeedModal';\nimport {DiaperModal} from './components/diaper/DiaperModal';\nimport { BabyBottleModal } from './components/babyBottle/BabyBottleModal';\nimport { ActivityTable } from './components/activityTable/activityTable';\nimport { ManualModal } from './components/manual/ManualModal';\nimport { ImportModal } from './components/data/ImportModal';\nimport { ExportModal } from './components/data/ExportModal';\nimport { SummaryChart } from './components';\nimport { useState } from 'react';\nimport { Button, Grid, Switch, Typography } from '@material-ui/core';\n\nenum Mode {\n  HISTORY, STATS\n}\n\nexport function App() {\n  const [mode, setMode] = useState(Mode.HISTORY);\n\n  const handleChange = (evt: any, checked: boolean) => {\n    setMode(checked ? Mode.HISTORY : Mode.STATS);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <div className='action-wrapper'>\n          <div className='actions'>\n            <BreastFeedModal type='l' />\n            <BreastFeedModal type='r' />\n            <BabyBottleModal />\n            <DiaperModal />\n            <ManualModal modalTitle='Ajouter'></ManualModal>\n          </div>\n          <div className='actions'>\n            <ExportModal />\n            <ImportModal />\n          </div>\n          <Typography component=\"div\" align='center'>\n            <Grid component=\"label\" container alignItems=\"center\" justify='center' spacing={1}>\n              <Grid item>Statistiques</Grid>\n              <Grid item>\n                <Switch checked={Mode.HISTORY === mode} onChange={handleChange} name=\"checkedC\" />\n              </Grid>\n              <Grid item>Historique</Grid>\n            </Grid>\n          </Typography>\n      </div>\n      {mode === Mode.STATS &&\n      <div>\n        <SummaryChart />\n      </div>\n      }\n      {mode === Mode.HISTORY &&\n      <div>\n        <ActivityTable />\n      </div>\n      }\n      <a id=\"downloadAnchorElem\" style={{display: 'none'}}></a>\n    </div>\n  );\n}","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { babyBottleReducer } from '../features';\nimport {breastFeedReducer} from '../features/breastFeed/breastFeedSlice';\nimport {diaperReducer} from '../features/diaper/diaperSlice';\n\nexport const store = configureStore({\n  reducer: {\n    babyBottle: babyBottleReducer,\n    breastFeed: breastFeedReducer,\n    diaper: diaperReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorkerRegistration';\nimport { getAllBabyBottleData, getAllBreastFeedData, getAllDiapersData, initDb } from './utils';\nimport { babyBottleActions, breastFeedActions, DiaperActions } from './features';\n\nconst db = window.indexedDB;\n\nsetTimeout(() => {\n  initDb().then(() => {\n    Promise.all([getAllBabyBottleData(), getAllBreastFeedData(), getAllDiapersData()]).then(([babyBottleData, breastFeedData, allDiapersData]) => {\n      console.log(babyBottleData, breastFeedData, allDiapersData);\n      store.dispatch(babyBottleActions.loadData(arrayToObject(babyBottleData, 'start')));\n      store.dispatch(breastFeedActions.loadData(arrayToObject(breastFeedData, 'start')));\n      store.dispatch(DiaperActions.loadData(arrayToObject(allDiapersData, 'start')));\n    });\n  });\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}, 200);\n\n\nfunction arrayToObject(array: any[], key: string) {\n  const obj: any = {};\n  array.forEach((el: any) => {\n    obj[el[key]] = el;\n  })\n  return obj;\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}