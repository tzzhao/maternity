{"version":3,"sources":["interfaces/breastFeed.interfaces.ts","utils/date.utils.ts","utils/db.utils.ts","features/breastFeed/breastFeedSlice.ts","components/breastFeed/BreastFeedModal.tsx","features/diaper/diaperSlice.ts","features/babyBottle/babyBottleSlice.ts","interfaces/diaper.interfaces.ts","components/diaper/DiaperModal.tsx","components/babyBottle/BabyBottleModal.tsx","components/manual/ManualModal.tsx","components/activityTable/activityTable.tsx","components/data/ImportModal.tsx","components/data/ExportModal.tsx","App.tsx","app/store.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["RIGHT","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","length","dayString","join","formatDuration","duration","Math","floor","timeToString","time","formattedTime","toString","db","BreastFeedStatus","ObjectStore","BREAST_FEED","DIAPERS","BABY_BOTTLE","a","openDB","upgrade","database","oldVersion","newVersion","transaction","createObjectStore","keyPath","data","put","key","delete","getAllBreastFeedData","getAll","getAllBabyBottleData","getAllDiapersData","initialState","status","IDLE","lastStart","undefined","updateStorage","putBreastFeedData","breastFeedSlice","createSlice","name","reducers","startRightBreastFeeding","state","FEEDING_R","round","now","startLeftBreastFeeding","FEEDING_L","stopBreastFeeding","action","previousStatus","start","payload","breastFeedData","type","loadData","addBreastFeedData","removeBreastFeedData","deleteBreastFeedData","importBreastFeedData","breastFeedActions","actions","breastFeedReducer","reducer","BreastFeedModalBase","props","getDuration","getNowTime","startTime","realMinutes","realSeconds","hoursString","getFormattedTime","minutesString","secondsString","openModal","clearInterval","timeout","setInterval","forceUpdate","setState","open","refreshInterval","saveData","closeModal","event","reason","num","this","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogActions","autoFocus","Component","mapDispatch","BreastFeedModal","connect","connector","putDiapersData","BabyBottleStatus","diaperSlice","logPeeDiaper","diaperData","logStollDiaper","addDiaperData","removeDiaperData","deleteDiapersData","importDiaperData","DiaperActions","diaperReducer","DiaperModalBase","logPee","logStool","DiaperModal","putBabyBottleData","babyBottleSlice","startBabyBottle","FEEDING","stopBabyBottle","babyBottleData","quantity","addBabyBottleData","removeBabyBottleData","deleteBabyBottleData","importBabyBottleData","babyBottleActions","babyBottleReducer","LOCAL_STORAGE_KEY","BabyBottleModalBase","handleChange","evt","Number","target","value","NaN","localStorage","setItem","saveQuantity","getItem","FormControl","Input","onChange","endAdornment","InputAdornment","position","FormHelperText","BabyBottleModal","ManualModalMode","ManualModalBase","quantityRef","createRef","startTimeRef","endTimeRef","getDefaultValues","defaultDate","startDefault","endDefault","quantityDefault","mode","endTime","current","getTime","isBreast","isBabyBottle","isDiaper","iconButton","IconButton","modalTitle","InputLabel","Select","disabled","MenuItem","inputRef","defaultValue","inputProps","step","timeInSeconds","ManualModal","ActivityTableBase","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","renderRows","Object","values","babyBottle","breastFeed","diaper","sort","b","aScore","map","renderDiaperRow","renderBabyBottleRow","renderBreastFeedRow","fontSize","PureComponent","ActivityTable","ImportModalBase","textFieldRef","updateState","jsonObject","JSON","parse","e","TextField","multiline","ImportModal","ExportModalBase","copyToClipboard","copyText","document","getElementById","select","setSelectionRange","execCommand","id","readOnly","stringify","ExportModal","App","className","store","configureStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","indexedDB","arrayToObject","array","obj","forEach","el","setTimeout","initDb","Promise","all","allDiapersData","dispatch","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c32f7b0b.chunk.js","sourcesContent":["import { FeedData } from \"./feed.interface\";\n\nexport const RIGHT = 'r';\nexport const LEFT = 'l';\n\nexport type BreastFeedType = typeof RIGHT | typeof LEFT;\n\nexport interface BreastFeedData extends FeedData {\n    type: BreastFeedType\n}","export function formatDate(date: number | string) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear(),\n        hours = '' + d.getHours(),\n        minutes = '' + d.getMinutes(),\n        seconds = '' + d.getSeconds();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n    if (hours.length < 2) hours = '0' + hours;\n    if (minutes.length < 2) minutes = '0' + minutes;\n    if (seconds.length < 2) seconds = '0' + seconds;\n\n    const dayString = [year, month, day].join('-');\n    return `${dayString} ${hours}:${minutes}:${seconds}`;\n}\n\nexport function formatDuration(duration: number) {\n    let seconds = duration;\n    let minutes = Math.floor(seconds / 60);\n    let hours = Math.floor(minutes / 60);\n    seconds -= minutes * 60;\n    minutes -= hours * 60;\n    return `${timeToString(hours)}:${timeToString(minutes)}:${timeToString(seconds)}`\n}\n\nfunction timeToString(time: number) {\n    let formattedTime = time.toString();\n    if (formattedTime.length < 2) formattedTime = '0' + formattedTime;\n    return formattedTime;\n}\n\nexport function getDateFromString(date: string) {\n    const [dateString, timeString] = date.split(' ');\n    const [year, month, day] = dateString.split('-');\n    const [hours, minutes, seconds] = timeString.split(':');\n    return new Date(+year, +month, +day, +hours, +minutes, +seconds);\n}\n\nexport const MONTHS = ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Aout', 'Sept', 'Oct', 'Nov', 'Dec'];\nexport const WEEKDAYS = ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'];\n\nexport function getDaysOfMonth(year: number, month: number) {\n    const nbDays = new Date(year, month, 0).getDate();\n    const dateArray: string[] = [];\n    for (let d = 0; d < nbDays; d++) {\n        dateArray.push((d+1).toString());\n    }\n    return dateArray;\n}","import { openDB, deleteDB, IDBPDatabase, IDBPTransaction, StoreNames } from 'idb';\nimport { BreastFeedData, DiaperData } from '../interfaces';\nimport { BabyBottleData } from '../interfaces/babyBottle.interface';\n\nlet db: IDBPDatabase;\n\nexport const ObjectStore = {\n    BREAST_FEED: 'breastFeed',\n    DIAPERS: 'diapers',\n    BABY_BOTTLE: 'babyBottle'\n}\n\nexport async function initDb() {\n    db = await openDB('maternity', 1, {\n        upgrade: (database: IDBPDatabase, oldVersion: number, newVersion: number | null, transaction: IDBPTransaction<any, StoreNames<any>[], 'versionchange'>) => {\n            database.createObjectStore(ObjectStore.BREAST_FEED, {keyPath: 'start'});\n            database.createObjectStore(ObjectStore.DIAPERS, {keyPath: 'time'});\n            database.createObjectStore(ObjectStore.BABY_BOTTLE, {keyPath: 'start'});\n        }\n    });\n    return db;\n}\n\nexport async function putBreastFeedData(data: BreastFeedData) {\n    db.put(ObjectStore.BREAST_FEED, data);\n}\n\nexport async function putDiapersData(data: DiaperData) {\n    db.put(ObjectStore.DIAPERS, data);\n}\n\nexport async function putBabyBottleData(data: BabyBottleData) {\n    db.put(ObjectStore.BABY_BOTTLE, data);\n}\n\nexport async function deleteBreastFeedData(key: number) {\n    db.delete(ObjectStore.BREAST_FEED, key);\n}\n\nexport async function deleteDiapersData(key: number) {\n    db.delete(ObjectStore.DIAPERS, key);\n}\n\nexport async function deleteBabyBottleData(key: number) {\n    db.delete(ObjectStore.BABY_BOTTLE, key);\n}\n\nexport async function getAllBreastFeedData(): Promise<BreastFeedData[]> {\n    return db.getAll(ObjectStore.BREAST_FEED);\n}\n\nexport async function getAllBabyBottleData(): Promise<BabyBottleData[]> {\n    return db.getAll(ObjectStore.BABY_BOTTLE);\n}\n\nexport async function getAllDiapersData(): Promise<DiaperData[]> {\n    return db.getAll(ObjectStore.DIAPERS)\n}\n\nexport async function resetData() {\n    Object.values(ObjectStore).forEach((storeKey: string) => {\n        resetObjectStore(storeKey);\n    });\n}\n\nexport async function resetObjectStore(storeKey: string) {\n    db.deleteObjectStore(storeKey);\n    db.createObjectStore(storeKey);\n}","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {BreastFeedData, BreastFeedType, LEFT, RIGHT} from '../../interfaces/breastFeed.interfaces';\nimport { deleteBreastFeedData, putBreastFeedData } from '../../utils';\n\nexport enum BreastFeedStatus {\n  IDLE, FEEDING_R, FEEDING_L\n}\n\nexport interface BreastFeedState {\n  data: {[start: number]: BreastFeedData};\n  status: BreastFeedStatus;\n  lastStart: number | undefined;\n}\n\nconst initialState: BreastFeedState = {\n  data: {},\n  status: BreastFeedStatus.IDLE,\n  lastStart: undefined\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\n// export const incrementAsync = createAsyncThunk(\n//   'counter/fetchCount',\n//   async (amount: number) => {\n//     const response = await fetchCount(amount);\n//     // The value we return becomes the `fulfilled` action payload\n//     return response.data;\n//   }\n// );\n\nfunction updateStorage(data: BreastFeedData) {\n  putBreastFeedData(data);\n}\n\nexport const breastFeedSlice = createSlice({\n  name: 'breastFeed',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    startRightBreastFeeding: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.status = BreastFeedStatus.FEEDING_R;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    startLeftBreastFeeding: (state) => {\n      state.status = BreastFeedStatus.FEEDING_L;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    stopBreastFeeding: (state, action: PayloadAction<number | undefined>) => {\n      const previousStatus = state.status;\n      const start = state.lastStart;\n      if (start !== undefined && previousStatus !== BreastFeedStatus.IDLE && action.payload !== undefined) {\n        const duration = action.payload;\n        const breastFeedData: BreastFeedData = {\n          start,\n          duration,\n          type: previousStatus === BreastFeedStatus.FEEDING_R ? RIGHT : LEFT\n        };\n        state.data = {...state.data, [start]: breastFeedData};\n        updateStorage(breastFeedData);\n      }\n\n      state.status = BreastFeedStatus.IDLE;\n      state.lastStart = undefined;\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: BreastFeedData}>) => {\n      state.data = action.payload;\n    },\n    addBreastFeedData: (state, action: PayloadAction<BreastFeedData>) => {\n      state.data = {...state.data, [action.payload.start]: action.payload};\n      updateStorage(action.payload);\n    },\n    removeBreastFeedData: (state, action: PayloadAction<number>) => {\n      delete state.data[action.payload];\n      deleteBreastFeedData(action.payload);\n    },\n    importBreastFeedData: (state, action: PayloadAction<{[start: number]: BreastFeedData}>) => {\n      state.data = {...state.data, ...action.payload};\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    // incrementByAmount: (state, action: PayloadAction<number>) => {\n    //   state.value += action.payload;\n    // },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(incrementAsync.pending, (state) => {\n  //       state.status = 'loading';\n  //     })\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\n  //       state.status = 'idle';\n  //       state.value += action.payload;\n  //     });\n  // },\n});\n\nexport const breastFeedActions = breastFeedSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n// export const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount: number): AppThunk => (\n//   dispatch,\n//   getState\n// ) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport const breastFeedReducer = breastFeedSlice.reducer;\n","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { breastFeedActions } from \"../../features/breastFeed/breastFeedSlice\";\nimport { BreastFeedType, RIGHT } from \"../../interfaces/breastFeed.interfaces\";\n\ninterface Props extends PropsFromRedux {\n    type: BreastFeedType\n}\n\ninterface State {\n    startTime: number;\n    open: boolean;\n    refreshInterval: any;\n}\n\nclass BreastFeedModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, startTime: 0, refreshInterval: undefined};\n    }\n\n    public render() {\n        const type = this.props.type === RIGHT ? 'droit' : 'gauche';\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Sein {type}\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Sein {type}\n            </DialogTitle>\n            <DialogContent>\n                {this.getDuration()}\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                Fini!\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private getDuration = () => {\n        const duration = this.getNowTime() - this.state.startTime;\n        const minutes =  Math.floor(duration / 60);\n        const hours = Math.floor(minutes / 60);\n\n        const realMinutes = minutes - hours * 60;\n        const realSeconds = duration - minutes * 60;\n        \n        const hoursString = this.getFormattedTime(hours);\n        const minutesString = this.getFormattedTime(realMinutes);\n        const secondsString = this.getFormattedTime(realSeconds);\n        return `${hoursString}:${minutesString}:${secondsString}`;\n    }\n\n    private openModal = () => {\n        this.clearInterval();\n        const timeout = setInterval(() => {\n            this.forceUpdate();\n        }, 1000);\n        this.setState({open: true, startTime: this.getNowTime(), refreshInterval: timeout});\n        if (this.props.type === RIGHT) {\n            this.props.startRightBreastFeeding();\n        } else {\n            this.props.startLeftBreastFeeding();\n        }\n    }\n\n    private clearInterval = () => {\n        if (this.state.refreshInterval !== undefined) {\n            clearInterval(this.state.refreshInterval);\n        }\n    }\n\n    private saveData = () => {\n        this.clearInterval();\n        const now = this.getNowTime();\n        this.props.stopBreastFeeding(now - this.state.startTime);\n        this.setState({open: false, refreshInterval: undefined});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        if (reason && reason === 'backdropClick') {\n            return;\n        }\n        this.clearInterval();\n        this.setState({open: false, refreshInterval: undefined});\n        this.props.stopBreastFeeding(undefined);\n    }\n\n    private getNowTime = () => {\n        return Math.round(Date.now() / 1000);\n    }\n\n    private getFormattedTime = (num: number) => {\n        return num < 10 ? `0${num}` : num;\n    }\n}\n\nconst mapDispatch = breastFeedActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const BreastFeedModal = connector(BreastFeedModalBase);","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {DiaperData, PEE, STOOL} from '../../interfaces/diaper.interfaces';\nimport { deleteDiapersData, putDiapersData } from '../../utils';\n\nexport interface DiaperState {\n  data: {[start: number]: DiaperData};\n}\n\nconst initialState: DiaperState = {\n  data: {},\n};\n\nfunction updateStorage(data: DiaperData) {\n  putDiapersData(data);\n}\n\nexport const diaperSlice = createSlice({\n  name: 'Diaper',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    logPeeDiaper: (state) => {\n      const time = Math.round(Date.now() / 1000);\n      const diaperData: DiaperData = {time, type: PEE};\n      state.data = {...state.data, [time]: diaperData};\n      updateStorage(diaperData);\n    },\n    logStollDiaper: (state) => {\n        const time = Math.round(Date.now() / 1000);\n        const diaperData: DiaperData = {time, type: STOOL};\n        state.data = {...state.data, [time]: diaperData};\n        updateStorage(diaperData);\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: DiaperData}>) => {\n      state.data = action.payload;\n    },\n    addDiaperData: (state, action: PayloadAction<DiaperData>) => {\n      state.data = {...state.data, [action.payload.time]: action.payload};\n      updateStorage(action.payload);\n    },\n    removeDiaperData: (state, action: PayloadAction<number>) => {\n      delete state.data[action.payload];\n      deleteDiapersData(action.payload);\n    },\n    importDiaperData: (state, action: PayloadAction<{[start: number]: DiaperData}>) => {\n      state.data = {...state.data, ...action.payload};\n    },\n  },\n});\n\nexport const DiaperActions = diaperSlice.actions;\n\nexport const diaperReducer = diaperSlice.reducer;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {BabyBottleData} from '../../interfaces/babyBottle.interface';\nimport { deleteBabyBottleData, putBabyBottleData } from '../../utils';\n\nexport enum BabyBottleStatus {\n  IDLE, FEEDING\n}\n\nexport interface BabyBottleState {\n  data: {[start: number]: BabyBottleData};\n  status: BabyBottleStatus;\n  lastStart: number | undefined;\n}\n\nconst initialState: BabyBottleState = {\n  data: {},\n  status: BabyBottleStatus.IDLE,\n  lastStart: undefined\n};\n\nfunction updateStorage(data: BabyBottleData) {\n  putBabyBottleData(data);\n}\n\nexport const babyBottleSlice = createSlice({\n  name: 'babyBottle',\n  initialState,\n  reducers: {\n    startBabyBottle: (state) => {\n      state.status = BabyBottleStatus.FEEDING;\n      state.lastStart = Math.round(Date.now() / 1000);\n    },\n    stopBabyBottle: (state, action: PayloadAction<{duration: number, quantity: number} | undefined>) => {\n      const previousStatus = state.status;\n      const start = state.lastStart;\n      if (start !== undefined && previousStatus !== BabyBottleStatus.IDLE && action.payload !== undefined) {\n        const {duration, quantity} = action.payload;\n        const babyBottleData: BabyBottleData = {\n          start,\n          duration,\n          quantity\n        };\n        state.data = {...state.data, [start]: babyBottleData};\n        updateStorage(babyBottleData);\n      }\n\n      state.status = BabyBottleStatus.IDLE;\n      state.lastStart = undefined;\n    },\n    loadData: (state, action: PayloadAction<{[start: number]: BabyBottleData}>) => {\n      state.data = action.payload;\n    },\n    addBabyBottleData: (state, action: PayloadAction<BabyBottleData>) => {\n      state.data = {...state.data, [action.payload.start]: action.payload};\n      updateStorage(action.payload);\n    },\n    removeBabyBottleData: (state, action: PayloadAction<number>) => {\n      delete state.data[action.payload];\n      deleteBabyBottleData(action.payload);\n    },\n    importBabyBottleData: (state, action: PayloadAction<{[start: number]: BabyBottleData}>) => {\n      state.data = {...state.data, ...action.payload};\n    },\n  },\n});\n\nexport const babyBottleActions = babyBottleSlice.actions;\n\nexport const babyBottleReducer = babyBottleSlice.reducer;\n","export const PEE = 'p';\nexport const STOOL = 's';\n\nexport type DiaperType = typeof PEE | typeof STOOL;\n\nexport interface DiaperData {\n    time: number,\n    type: DiaperType\n}","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { DiaperActions } from \"../../features/diaper/diaperSlice\";\n\ninterface Props extends PropsFromRedux {\n}\n\ninterface State {\n    open: boolean;\n}\n\nclass DiaperModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Couche\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Couche\n            </DialogTitle>\n            <DialogActions>\n            <Button autoFocus onClick={this.logPee} variant=\"contained\" color=\"primary\">\n                Pipi\n            </Button>\n            <Button autoFocus onClick={this.logStool} variant=\"contained\" color=\"primary\">\n                Caca\n            </Button>\n            <Button autoFocus onClick={this.closeModal} variant=\"contained\" color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n\n    private logPee = () => {\n        this.props.logPeeDiaper();\n        this.closeModal();\n    }\n\n    private logStool = () => {\n        this.props.logStollDiaper();\n        this.closeModal();\n    }\n    \n    private closeModal = () => {\n        this.setState({open: false});\n    }\n}\n\nconst mapDispatch = DiaperActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const DiaperModal = connector(DiaperModalBase);","import React, { ChangeEvent, ChangeEventHandler, Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormHelperText, Input, InputAdornment } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { babyBottleActions } from \"../../features/babyBottle/babyBottleSlice\";\n\ninterface Props extends PropsFromRedux {\n}\n\nconst LOCAL_STORAGE_KEY = 'bottleQuantity';\n\nfunction saveQuantity(quantity: number): void {\n    localStorage.setItem(LOCAL_STORAGE_KEY, quantity.toString());\n}\n\nfunction getQuantity(): number {\n    return Number((localStorage.getItem(LOCAL_STORAGE_KEY) || '60'));\n}\n\ninterface State {\n    startTime: number;\n    open: boolean;\n    refreshInterval: any;\n    quantity: number;\n}\n\nclass BabyBottleModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false, startTime: 0, refreshInterval: undefined, quantity: getQuantity()};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Biberon\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Biberon\n            </DialogTitle>\n            <DialogContent>\n                <div>{this.getDuration()}</div>\n                <FormControl>\n                    <Input\n                        value={this.state.quantity}\n                        onChange={this.handleChange}\n                        endAdornment={<InputAdornment position=\"end\">mL</InputAdornment>}\n                        type='number'\n                    />\n                    <FormHelperText>Quantité</FormHelperText>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                Fini!\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private handleChange = (evt: ChangeEvent<HTMLInputElement|HTMLTextAreaElement>) => {\n        let quantity = Number(evt.target.value);\n        if (quantity === NaN) {\n            quantity = this.state.quantity;\n        }\n        this.setState({quantity});\n        saveQuantity(quantity);\n    }\n\n    private getDuration = () => {\n        const duration = this.getNowTime() - this.state.startTime;\n        const minutes =  Math.floor(duration / 60);\n        const hours = Math.floor(minutes / 60);\n\n        const realMinutes = minutes - hours * 60;\n        const realSeconds = duration - minutes * 60;\n        \n        const hoursString = this.getFormattedTime(hours);\n        const minutesString = this.getFormattedTime(realMinutes);\n        const secondsString = this.getFormattedTime(realSeconds);\n        return `${hoursString}:${minutesString}:${secondsString}`;\n    }\n\n    private openModal = () => {\n        this.clearInterval();\n        const timeout = setInterval(() => {\n            this.forceUpdate();\n        }, 1000);\n        this.setState({open: true, startTime: this.getNowTime(), refreshInterval: timeout});\n        this.props.startBabyBottle();\n    }\n\n    private clearInterval = () => {\n        if (this.state.refreshInterval !== undefined) {\n            clearInterval(this.state.refreshInterval);\n        }\n    }\n\n    private saveData = () => {\n        this.clearInterval();\n        const now = this.getNowTime();\n        this.props.stopBabyBottle({duration: now - this.state.startTime, quantity: this.state.quantity});\n        this.setState({open: false, refreshInterval: undefined});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        if (reason && reason === 'backdropClick') {\n            return;\n        }\n        this.clearInterval();\n        this.setState({open: false, refreshInterval: undefined});\n        this.props.stopBabyBottle(undefined);\n    }\n\n    private getNowTime = () => {\n        return Math.round(Date.now() / 1000);\n    }\n\n    private getFormattedTime = (num: number) => {\n        return num < 10 ? `0${num}` : num;\n    }\n}\n\nconst mapDispatch = babyBottleActions;\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const BabyBottleModal = connector(BabyBottleModalBase);","import React, { ChangeEvent, ChangeEventHandler, Component, createRef, RefObject } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormHelperText, IconButton, Input, InputAdornment, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { babyBottleActions } from \"../../features/babyBottle/babyBottleSlice\";\nimport { breastFeedActions, DiaperActions } from \"../../features\";\nimport { createFalse } from \"typescript\";\nimport { BreastFeedData, DiaperData, LEFT, PEE, RIGHT, STOOL } from \"../../interfaces\";\nimport { BabyBottleData } from \"../../interfaces/babyBottle.interface\";\n\ninterface Props extends PropsFromRedux {\n    modalTitle: string,\n    mode?: string,\n    data?: BabyBottleData | BreastFeedData | DiaperData,\n    iconButton?: JSX.Element,\n}\n\nconst LOCAL_STORAGE_KEY = 'bottleQuantity';\n\nfunction getQuantity(): number {\n    return Number((localStorage.getItem(LOCAL_STORAGE_KEY) || '60'));\n}\n\nexport const ManualModalMode = {\n    BREAST_L: 'bl',\n    BREAST_R: 'br',\n    BABY_BOTTLE: 'bottle', \n    DIAPER_PEE: 'pee',\n    DIAPER_STOOL: 'stool'\n}\n\ninterface State {\n    mode: string,\n    open: boolean\n}\n\nclass ManualModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {mode: this.props.mode || ManualModalMode.BABY_BOTTLE, open: false};\n    }\n\n    private quantityRef: RefObject<HTMLInputElement> = createRef();\n    private startTimeRef: RefObject<HTMLInputElement> = createRef();\n    private endTimeRef: RefObject<HTMLInputElement> = createRef();\n\n    public render() {\n        const isBreast = this.state.mode === ManualModalMode.BREAST_R || this.state.mode === ManualModalMode.BREAST_L;\n        const isBabyBottle = this.state.mode === ManualModalMode.BABY_BOTTLE;\n        const isDiaper = this.state.mode === ManualModalMode.DIAPER_PEE || this.state.mode === ManualModalMode.DIAPER_STOOL;\n\n\n        const { startDefault, endDefault, quantityDefault } = this.getDefaultValues();\n\n        return <>\n        {this.props.iconButton ? \n        <IconButton onClick={this.openModal}>{this.props.iconButton}</IconButton>\n        :\n        <Button variant='outlined' color=\"primary\" onClick={this.openModal}>\n        {this.props.modalTitle}\n    </Button>\n        }\n\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                {this.props.modalTitle}\n            </DialogTitle>\n            <DialogContent>\n            <FormControl>\n                <InputLabel>Type</InputLabel>\n                <Select\n                value={this.props.mode || this.state.mode}\n                onChange={this.handleChange}\n                disabled={!!this.props.mode}\n                >\n                <MenuItem value={ManualModalMode.BREAST_R}>Sein droit</MenuItem>\n                <MenuItem value={ManualModalMode.BREAST_L}>Sein gauche</MenuItem>\n                <MenuItem value={ManualModalMode.BABY_BOTTLE}>Biberon</MenuItem>\n                <MenuItem value={ManualModalMode.DIAPER_PEE}>Couche (Pipi)</MenuItem>\n                <MenuItem value={ManualModalMode.DIAPER_STOOL}>Couche (Caca)</MenuItem>\n                </Select>\n            </FormControl>\n                {isDiaper && <FormControl>\n                    <InputLabel>Moment</InputLabel>\n                    <Input\n                        inputRef={this.startTimeRef}\n                        type='datetime-local'\n                        defaultValue={startDefault}\n                        disabled={!!this.props.mode}\n                        inputProps={{\n                            step: 1,\n                          }}\n                    />\n                </FormControl>}\n                {(isBreast || isBabyBottle) && <><FormControl>\n                    <InputLabel>Début</InputLabel>\n                    <Input\n                        inputRef={this.startTimeRef}\n                        type='datetime-local'\n                        defaultValue={startDefault}\n                        disabled={!!this.props.mode}\n                        inputProps={{\n                            step: 1,\n                          }}\n                    />\n                </FormControl>\n                <FormControl>\n                <InputLabel>Fin</InputLabel>\n                    <Input\n                        inputRef={this.endTimeRef}\n                        type='datetime-local'\n                        defaultValue={endDefault}\n                        inputProps={{\n                            step: 1,\n                          }}\n                    />\n                </FormControl></>}\n                {isBabyBottle && <FormControl>\n                    <InputLabel>Quantité</InputLabel>\n                    <Input\n                        inputRef={this.quantityRef}\n                        defaultValue={quantityDefault}\n                        endAdornment={<InputAdornment position=\"end\">mL</InputAdornment>}\n                        type='number'\n                    />\n                </FormControl>\n                }\n            </DialogContent>\n            <DialogActions>\n            <Button autoFocus variant=\"contained\"  onClick={this.saveData} color=\"primary\">\n                {this.props.modalTitle}\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Annuler\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private getDefaultValues = () => {\n        let defaultDate = this.getFormattedTime(Math.floor(Date.now() / 1000));\n        let startDefault = defaultDate, endDefault = defaultDate, quantityDefault = getQuantity();\n        if (this.props.mode) {\n            if (this.props.mode === ManualModalMode.BREAST_L || this.props.mode === ManualModalMode.BREAST_R) {\n                const data = this.props.data as BreastFeedData;\n                startDefault = this.getFormattedTime(data.start);\n                endDefault = this.getFormattedTime(data.start + data.duration);\n            } else if (this.props.mode === ManualModalMode.BABY_BOTTLE) {\n                const data = this.props.data as BabyBottleData;\n                startDefault = this.getFormattedTime(data.start);\n                endDefault = this.getFormattedTime(data.start + data.duration);\n                quantityDefault = data.quantity;\n            } else {\n                const data = this.props.data as DiaperData;\n                startDefault = this.getFormattedTime(data.time);\n            }\n        }\n\n        return {\n            startDefault,\n            endDefault,\n            quantityDefault\n        }\n    }\n\n    private getFormattedTime(timeInSeconds: number) {\n        const date = new Date(timeInSeconds * 1000);\n        let month = (date.getMonth() + 1).toString();\n        if (month.length < 2) {\n            month = '0' + month;\n        }\n        let day = date.getDate().toString();\n        if (day.length < 2) {\n            day = '0' + day;\n        }\n        let hours = date.getHours().toString();\n        if (hours.length < 2) {\n            hours = '0' + hours;\n        }\n        let minutes = date.getMinutes().toString();\n        if (minutes.length < 2) {\n            minutes = '0' + minutes;\n        }\n        let seconds = date.getSeconds().toString();\n        if (seconds.length < 2) {\n            seconds = '0' + seconds;\n        }\n\n        const defaultTime = `${date.getFullYear()}-${month}-${day}T${hours}:${minutes}:${seconds}`;\n        return defaultTime;\n    }\n\n    private handleChange = (evt: ChangeEvent<{ name?: string | undefined; value: unknown; }>) => {\n        let mode = evt.target.value as string;\n        this.setState({mode});\n    }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n\n    private saveData = () => {\n        let startTime: number, endTime: number = 0, quantity: number = 0;\n        startTime = new Date(this.startTimeRef.current!.value).getTime() / 1000;\n        if (this.endTimeRef.current) {\n            endTime = new Date(this.endTimeRef.current.value).getTime() / 1000;\n        }\n        if (this.quantityRef.current) {\n            quantity = Number(this.quantityRef.current.value);\n        }\n\n        switch(this.state.mode) {\n            case ManualModalMode.BABY_BOTTLE: {\n                this.props.addBabyBottleData({\n                    start: startTime,\n                    duration: (endTime - startTime),\n                    quantity: quantity\n                });\n                break;\n            }\n            case ManualModalMode.BREAST_L: {\n                this.props.addBreastFeedData({\n                    start: startTime,\n                    duration: (endTime - startTime),\n                    type: LEFT\n                });\n                break;\n\n            }\n            case ManualModalMode.BREAST_R: {\n                this.props.addBreastFeedData({\n                    start: startTime,\n                    duration: (endTime - startTime),\n                    type: RIGHT\n                });\n                break;\n\n            }\n            case ManualModalMode.DIAPER_PEE: {\n                this.props.addDiaperData({\n                    time: startTime,\n                    type: PEE\n                });\n                break;\n\n            }\n            case ManualModalMode.DIAPER_STOOL: {\n                this.props.addDiaperData({\n                    time: startTime,\n                    type: STOOL\n                });\n                break;\n            }\n        }\n        this.setState({open: false});\n    }\n    \n    private closeModal = () => {\n        this.setState({open: false});\n    }\n}\n\nconst mapDispatch = {...babyBottleActions, ...breastFeedActions, ...DiaperActions};\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ManualModal = connector(ManualModalBase);","import { Button, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\nimport { PureComponent } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { BreastFeedData, DiaperData, LEFT, PEE } from \"../../interfaces\";\nimport { BabyBottleData } from \"../../interfaces/babyBottle.interface\";\nimport {formatDate, formatDuration} from '../../utils/date.utils';\nimport { ManualModal, ManualModalMode } from \"../manual/ManualModal\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { babyBottleActions, breastFeedActions, DiaperActions } from \"../../features\";\n\ninterface ActivityTableProps extends PropsFromRedux {\n\n}\n\nclass ActivityTableBase extends PureComponent<ActivityTableProps> {\n    public render() {\n        return <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Durée</TableCell>\n              <TableCell>Qté</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.renderRows()}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    }\n\n    renderRows() {\n        const data: any = [...Object.values(this.props.babyBottle), ...Object.values(this.props.breastFeed), ...Object.values(this.props.diaper)];\n        data.sort((a: any, b: any) => {\n            const aScore = a.start || a.time;\n            const bScore = b.start || b.time;\n            return bScore - aScore;\n        });\n        return data.map((d: any) => {\n            if (d.time) {\n                return this.renderDiaperRow(d);\n            } else if (d.quantity) {\n                return this.renderBabyBottleRow(d);\n            } else {\n                return this.renderBreastFeedRow(d);\n            }\n        })\n    }\n\n    private renderBreastFeedRow(data: BreastFeedData) {\n        const mode = data.type === LEFT ? ManualModalMode.BREAST_L : ManualModalMode.BREAST_R;\n        const onDelete = () => {\n            this.props.removeBreastFeedData(data.start);\n        }\n        return <TableRow>\n            <TableCell>{formatDate(data.start * 1000)}</TableCell>\n            <TableCell>Sein {data.type === 'l' ? '(G)' : '(D)'}</TableCell>\n            <TableCell>{formatDuration(data.duration)}</TableCell>\n            <TableCell></TableCell>\n            <TableCell>\n                <ManualModal modalTitle='Modifier' iconButton={<EditIcon fontSize='small'/>} mode={mode} data={data} />\n                <IconButton color=\"secondary\" onClick={onDelete}><DeleteIcon fontSize='small'/></IconButton>    \n            </TableCell>\n        </TableRow>\n    }\n\n    private renderDiaperRow(data: DiaperData ) {\n        const onDelete = () => {\n            this.props.removeDiaperData(data.time);\n        }\n        return <TableRow>\n            <TableCell>{formatDate(data.time * 1000)}</TableCell>\n            <TableCell>Couche ({data.type === 'p' ? 'P' : 'C'})</TableCell>\n            <TableCell></TableCell>\n            <TableCell></TableCell>\n            <TableCell>\n                <IconButton color=\"secondary\" onClick={onDelete}><DeleteIcon fontSize='small'/></IconButton>\n            </TableCell>\n        </TableRow>\n    }\n\n    private renderBabyBottleRow(data: BabyBottleData) {\n        const onDelete = () => {\n            this.props.removeBabyBottleData(data.start);\n        }\n        return <TableRow>\n        <TableCell>{formatDate(data.start * 1000)}</TableCell>\n        <TableCell>Biberon</TableCell>\n        <TableCell>{formatDuration(data.duration)}</TableCell>\n        <TableCell>{data.quantity}</TableCell>\n        <TableCell>\n            <ManualModal modalTitle='Modifier' iconButton={<EditIcon fontSize='small'/>} mode={ManualModalMode.BABY_BOTTLE} data={data}/>\n            <IconButton color=\"secondary\" onClick={onDelete}><DeleteIcon fontSize='small' /></IconButton>\n        </TableCell>\n    </TableRow>\n    }\n}\n\nconst mapDispatch = {...babyBottleActions, ...breastFeedActions, ...DiaperActions};\n\nconst mapState = (state: RootState) => ({\n    babyBottle: state.babyBottle.data,\n    breastFeed: state.breastFeed.data,\n    diaper: state.diaper.data\n})\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ActivityTable = connector(ActivityTableBase);","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { breastFeedActions } from \"../../features/breastFeed/breastFeedSlice\";\nimport { RootState } from \"../../app/store\";\nimport { babyBottleActions, DiaperActions } from \"../../features\";\nimport { createRef } from \"react\";\n\ninterface Props extends PropsFromRedux {\n}\n\ninterface State {\n    open: boolean;\n}\n\nclass ImportModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false};\n    }\n\n    private textFieldRef = createRef<HTMLTextAreaElement>();\n\n    public render() {\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Importer\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Importer\n            </DialogTitle>\n            <DialogContent>\n                <TextField inputRef={this.textFieldRef} multiline={true}>\n                </TextField>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={this.updateState} color=\"secondary\">\n                Importer\n            </Button>\n            <Button onClick={this.closeModal} color=\"secondary\">\n                Fermer\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        this.setState({open: false});\n    }\n\n    private updateState = () => {\n        const value = this.textFieldRef.current?.value;\n        if (value) {\n            try {\n                const jsonObject: any = JSON.parse(value);\n                if (jsonObject.babyBottle) {\n                    this.props.importBabyBottleData(jsonObject.babyBottle);\n                }\n                if (jsonObject.diaper) {\n                    this.props.importDiaperData(jsonObject.diaper);\n                }\n                if (jsonObject.breastFeed) {\n                    this.props.importBreastFeedData(jsonObject.breastFeed);\n                }\n            } catch (e) {\n    \n            }\n        }\n        this.setState({open: false});\n    }\n}\n\nconst mapDispatch = {...babyBottleActions, ...breastFeedActions, ...DiaperActions};\n\nconst connector = connect(undefined, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ImportModal = connector(ImportModalBase);","import React, { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { breastFeedActions } from \"../../features/breastFeed/breastFeedSlice\";\nimport { RootState } from \"../../app/store\";\n\ninterface Props extends PropsFromRedux {\n}\n\ninterface State {\n    open: boolean;\n}\n\nclass ExportModalBase extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {open: false};\n    }\n\n    public render() {\n        return <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.openModal}>\n            Exporter\n        </Button>\n        <Dialog open={this.state.open} onClose={this.closeModal}>\n            <DialogTitle>\n                Exporter\n            </DialogTitle>\n            <DialogContent>\n                <TextField multiline={true} id='content-to-export' inputProps={{\n                    readOnly: true,\n                    }}\n                value={JSON.stringify(this.props.state)}>\n                </TextField>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={this.copyToClipboard} color=\"secondary\">\n                Copier\n            </Button>\n            <Button autoFocus onClick={this.closeModal} color=\"secondary\">\n                Fermer\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    }\n\n    private copyToClipboard = () => {\n        /* Get the text field */\n        var copyText: any = document.getElementById(\"content-to-export\");\n      \n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999999); /* For mobile devices */\n      \n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n      }\n\n    private openModal = () => {\n        this.setState({open: true});\n    }\n    \n    private closeModal = (event?: any, reason?: string) => {\n        this.setState({open: false});\n    }\n}\n\nconst mapState = (state: RootState) => {\n    return {\n        state: {\n            babyBottle: state.babyBottle.data,\n            diaper: state.diaper.data,\n            breastFeed: state.breastFeed.data\n        }\n    }\n}\n\nconst mapDispatch = breastFeedActions;\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport const ExportModal = connector(ExportModalBase);","import React from 'react';\nimport './App.css';\nimport {BreastFeedModal} from './components/breastFeed/BreastFeedModal';\nimport {DiaperModal} from './components/diaper/DiaperModal';\nimport {BreastFeedActivity} from './components/breastFeed/BreastFeedActivity';\nimport {DiaperActivity} from './components/diaper/DiaperActivity';\nimport { BabyBottleModal } from './components/babyBottle/BabyBottleModal';\nimport { BabyBottleActivity } from './components/babyBottle/BabyBottleActivity';\nimport { ActivityTable } from './components/activityTable/activityTable';\nimport { ManualModal } from './components/manual/ManualModal';\nimport { ImportModal } from './components/data/ImportModal';\nimport { ExportModal } from './components/data/ExportModal';\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <div className='action-wrapper'>\n        <div className='actions'>\n          <BreastFeedModal type='l' />\n          <BreastFeedModal type='r' />\n          <BabyBottleModal />\n          <DiaperModal />\n          <ManualModal modalTitle='Ajouter'></ManualModal>\n        </div>\n        <div className='actions'>\n          <ExportModal />\n          <ImportModal />\n        </div>\n      </div>\n      <div>\n        <ActivityTable />\n      </div>\n    </div>\n  );\n}","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { babyBottleReducer } from '../features';\nimport {breastFeedReducer} from '../features/breastFeed/breastFeedSlice';\nimport {diaperReducer} from '../features/diaper/diaperSlice';\n\nexport const store = configureStore({\n  reducer: {\n    babyBottle: babyBottleReducer,\n    breastFeed: breastFeedReducer,\n    diaper: diaperReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorkerRegistration';\nimport { getAllBabyBottleData, getAllBreastFeedData, getAllDiapersData, initDb } from './utils';\nimport { babyBottleActions, breastFeedActions, DiaperActions } from './features';\n\nconst db = window.indexedDB;\n\nsetTimeout(() => {\n  initDb().then(() => {\n    Promise.all([getAllBabyBottleData(), getAllBreastFeedData(), getAllDiapersData()]).then(([babyBottleData, breastFeedData, allDiapersData]) => {\n      console.log(babyBottleData, breastFeedData, allDiapersData);\n      store.dispatch(babyBottleActions.loadData(arrayToObject(babyBottleData, 'start')));\n      store.dispatch(breastFeedActions.loadData(arrayToObject(breastFeedData, 'start')));\n      store.dispatch(DiaperActions.loadData(arrayToObject(allDiapersData, 'time')));\n    });\n  });\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}, 200);\n\n\nfunction arrayToObject(array: any[], key: string) {\n  const obj: any = {};\n  array.forEach((el: any) => {\n    obj[el[key]] = el;\n  })\n  return obj;\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}